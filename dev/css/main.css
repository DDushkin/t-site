@charset "UTF-8";
@font-face {
  font-family: "Toyota Display";
  src: url("../fonts/woff2/ToyotaDisplay_Rg.woff2"); }

@font-face {
  font-family: "Toyota Display";
  src: url("../fonts/woff2/ToyotaDisplay_Bd.woff2");
  font-weight: bold; }

@font-face {
  font-family: "Toyota Text";
  src: url("../fonts/woff2/ToyotaText_Rg.woff2"); }

@font-face {
  font-family: "Toyota Text";
  src: url("../fonts/woff2/ToyotaText_It.woff2");
  font-style: italic; }

@font-face {
  font-family: "Toyota Text";
  src: url("../fonts/woff2/ToyotaText_Bd.woff2");
  font-weight: bold; }

@font-face {
  font-family: "Toyota Text";
  src: url("../fonts/woff2/ToyotaText_BdIt.woff2");
  font-weight: bold;
  font-style: italic; }

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-user-select: #CC0033;
  -moz-user-select: #CC0033;
  -ms-user-select: #CC0033;
  user-select: #CC0033;
  overflow-x: hidden; }

body {
  font-size: 18px;
  font-family: "Toyota Text", "Roboto", Helvetica, Arial, sans-serif;
  color: #23171A;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  overflow-x: hidden; }
  @media (max-width: 1023px) {
    body {
      padding-top: 0 !important; } }

.read-more {
  position: absolute;
  bottom: 0; }

.gu-mirror {
  opacity: 1;
  overflow: hidden;
  -webkit-transform: rotate(-10deg);
  -ms-transform: rotate(-10deg);
  transform: rotate(-10deg);
  -webkit-box-shadow: none;
  box-shadow: none;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
  -webkit-transition: all .5s;
  -o-transition: all .5s;
  transition: all .5s;
  cursor: -webkit-grabbing; }

.gu-transit {
  cursor: -webkit-grabbing; }

section {
  padding-bottom: 200px; }
  @media (max-width: 1023px) {
    section {
      padding-bottom: 100px; } }

button {
  cursor: pointer; }

.clearfix:after, .wrapper:after, .car-card--big:after, .filter__icons:after, .available-car-info:after, .available-card:after, .test-drive-card:after, .test-drive-pace:after, .test-drive-terms__description:after, .test-drive-form__car:after, .corporate-card:after, .corporate-title-card:after, .card-big:after, .credit-card:after, .lising-card:after {
  content: "";
  display: table;
  clear: both; }

.page-head {
  overflow: hidden;
  position: relative;
  max-width: 100%;
  width: 100%;
  min-height: 300px;
  padding-bottom: 0;
  z-index: 1; }
  @media (max-width: 1023px) {
    .page-head {
      min-height: 145px; } }
  .page-head--news {
    margin-bottom: 100px;
    color: #fff;
    background: #174165 url("../img/bg-head-news.png") center no-repeat;
    background-size: cover; }
  .page-head--offers {
    background: url("../img/bg-head-offers.png") center/cover no-repeat; }
  .page-head--stuff {
    color: #fff;
    background: url("../img/bg-head-news.png") center/cover no-repeat; }
  .page-head--protect {
    margin-bottom: 100px;
    color: #fff;
    background: url("../img/bg-protect-head.png") center/cover no-repeat; }
  .page-head--touch {
    margin-bottom: 100px;
    color: #fff;
    background: url("../img/bg-touch-head.png") center/cover no-repeat; }
  .page-head--gallery {
    margin-bottom: 100px;
    color: #fff;
    background: url("../img/bg-head-gallery.png") center/cover no-repeat; }

.container {
  max-width: 1310px; }

.wrapper, .car-card--big {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  max-width: 1310px;
  position: relative;
  display: block;
  margin: 0 auto; }

.bg-cyan {
  background: url(../img/bg-models-filter.jpg); }

.section-title {
  font-size: 40px;
  font-family: "Toyota Display", arial, sans-serif;
  letter-spacing: .1em;
  line-height: 47px;
  text-align: center;
  font-weight: bold; }
  @media (max-width: 1023px) {
    .section-title {
      font-size: 26px; } }
  .section-title:before {
    content: "";
    display: block;
    width: 39px;
    height: 26px;
    margin: 0 auto 10px;
    background-image: url("../img/i-toyota.svg");
    background-size: contain;
    background-repeat: no-repeat; }
    @media (max-width: 1023px) {
      .section-title:before {
        width: 30px;
        height: 20px; } }
  .section-title--simple {
    margin-bottom: 0; }
    .section-title--simple:before {
      display: none; }
  .section-title--left {
    text-align: left; }
    .section-title--left:before {
      margin-left: 0; }
  @media (max-width: 767px) {
    .section-title {
      font-size: 24px;
      line-height: 28px; } }

.block-title {
  font-size: 24px;
  font-family: "Toyota Display";
  letter-spacing: .1em;
  font-weight: bold;
  margin: 0; }
  @media (max-width: 1023px) {
    .block-title {
      font-size: 18px; } }

.section-subtitle {
  margin-top: 10px;
  font-size: 14px;
  margin-bottom: 50px;
  font-style: italic;
  text-align: center; }
  .section-subtitle--left {
    text-align: left; }

.text-simple {
  font-size: 14px;
  color: #1D71B8;
  letter-spacing: .1em;
  font-style: italic;
  margin: 10px 0; }
  .text-simple--centered {
    text-align: center; }

/*хлебные крошки с белыми точками , если нужны черные, то прописать
.breadcrumbs__item:not(:first-child)::before {
    background: $black;
}  для нужного section

!!! добавил модификатор '--dark' для черных точек !!!
*/
.breadcrumbs {
  padding-top: 110px; }
  @media (max-width: 1023px) {
    .breadcrumbs {
      padding-top: 30px; } }
  @media (max-width: 767px) {
    .breadcrumbs {
      padding-top: 30px; } }
  .breadcrumbs__list {
    padding: 0;
    font-size: 0;
    text-align: center; }
  .breadcrumbs__item {
    position: relative;
    display: inline-block;
    padding-left: 15px;
    vertical-align: top;
    line-height: normal;
    font-size: 14px;
    font-style: italic;
    text-align: center;
    letter-spacing: 0.05em; }
    .breadcrumbs__item:not(:first-child)::before {
      position: absolute;
      top: 8px;
      left: 5px;
      width: 3px;
      height: 3px;
      border-radius: 50%;
      content: '';
      background: white; }
    .breadcrumbs__item:first-child {
      padding-left: 0; }
    .breadcrumbs__item:last-child {
      text-decoration: underline; }
    .breadcrumbs__item a {
      color: inherit;
      text-decoration: none; }
  .breadcrumbs__title {
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 40px;
    text-align: center;
    letter-spacing: 0.1em;
    margin: 0; }
    @media (max-width: 1023px) {
      .breadcrumbs__title {
        font-size: 26px; } }
    .breadcrumbs__title-wrap {
      padding-top: 15px; }
      @media (max-width: 1023px) {
        .breadcrumbs__title-wrap {
          padding-top: 10px; } }
  .breadcrumbs--dark .breadcrumbs__item:not(:first-child)::before {
    background: #23171A; }

.checkbox-label {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.is-checked:after {
  display: inline-block;
  content: "";
  width: 30px;
  height: 12px;
  margin-left: auto;
  background: url("../img/i-comparison-check.svg") center no-repeat;
  vertical-align: middle; }

.is-checked-o:after {
  display: inline-block;
  content: "";
  width: 30px;
  height: 30px;
  margin-left: auto;
  background: url("../img/i-comparison-check-o.svg") center no-repeat;
  vertical-align: middle; }

.btn-wrapper {
  text-align: center; }

.btn {
  display: inline-block;
  text-transform: uppercase;
  text-decoration: none;
  font-family: inherit;
  outline: none;
  border: none;
  color: #fff;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 17px 40px;
  -webkit-box-shadow: 4px 4px 24px rgba(44, 1, 12, 0.3);
  box-shadow: 4px 4px 24px rgba(44, 1, 12, 0.3);
  border-radius: 100px;
  vertical-align: middle;
  cursor: pointer;
  letter-spacing: .1em;
  -webkit-transition: all .3s;
  -o-transition: all .3s;
  transition: all .3s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent; }
  @media (max-width: 767px) {
    .btn {
      font-size: 14px; } }
  .btn-typical {
    background: #CC0033;
    text-align: center; }
    .btn-typical:hover {
      background-color: #9D0004; }
  .btn-typical-o {
    border: 3px solid #CC0033;
    color: #23171A;
    background: transparent;
    padding: 14px 40px; }
    .btn-typical-o:hover {
      background: #CC0033;
      color: #fff; }
    .btn-typical-o:active {
      border: 3px solid #9D0004;
      background-color: #9D0004; }
  .btn:active {
    -webkit-transform: translateY(1px);
    -ms-transform: translateY(1px);
    transform: translateY(1px);
    outline: none; }

.btn-more {
  cursor: pointer;
  font-family: "Toyota Display";
  line-height: normal;
  font-size: 24px;
  letter-spacing: 0.1em;
  color: #CC0033;
  font-weight: bold;
  text-decoration: none; }
  .btn-more--mobile {
    display: none; }
    .btn-more--mobile span {
      display: none; }
    @media (max-width: 767px) {
      .btn-more--mobile {
        float: none;
        display: inline-block !important; } }
  .btn-more:after {
    width: 18px;
    height: 18px;
    display: inline-block;
    content: "";
    margin-left: 10px;
    background: url("../img/i-more-arrow.svg") center no-repeat;
    vertical-align: middle; }
  .btn-more:focus {
    outline: none; }
  .btn-more:hover {
    text-decoration: underline; }

.input-count__wrapper {
  width: calc(100% / 12 * 7 - 30px);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px; }
  .input-count__wrapper .incr-btn {
    will-change: transform;
    -webkit-transition: all .1s;
    -o-transition: all .1s;
    transition: all .1s; }
    .input-count__wrapper .incr-btn:active {
      -webkit-transform: scale(0.9);
      -ms-transform: scale(0.9);
      transform: scale(0.9); }

.input-count__decr {
  width: calc(100% / 12 * 3 - 30px);
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  color: #CC0033;
  text-decoration: none;
  font-size: 24px; }

.input-count__quant {
  width: calc(100% / 12 * 6 - 30px);
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  margin: 0 10px;
  border-color: transparent;
  text-align: center; }

.input-count__incr {
  width: calc(100% / 12 * 3 - 30px);
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  color: #CC0033;
  text-decoration: none;
  font-size: 24px; }

/* Ex:
label.filter-block__switch-label
  input.filter-block__switch-box(type="checkbox")
  span.checkbox-label Компактні автомобілі
*/
input[type="checkbox"] {
  display: none; }

input[type="checkbox"] + .checkbox-label::before {
  display: inline-block;
  width: 22px;
  height: 22px;
  margin-right: 10px;
  vertical-align: middle;
  background: url(../img/i-check-box.svg) center no-repeat;
  cursor: pointer;
  content: "";
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border-radius: 7px;
  border: 3px solid rgba(29, 113, 184, 0);
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }

input[type="checkbox"]:checked + .checkbox-label::before {
  background: url(../img/i-check-tick.svg) center no-repeat; }

input[type="checkbox"] + .checkbox-label:hover::before {
  border: 3px solid rgba(29, 113, 184, 0.5); }

input[type="radio"] {
  display: none; }

input[type="radio"] + .checkbox-label::before {
  display: inline-block;
  width: 22px;
  height: 22px;
  margin-right: 10px;
  vertical-align: middle;
  background: url(../img/i-radio-o.svg) center no-repeat;
  cursor: pointer;
  content: "";
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

input[type="radio"]:checked + .checkbox-label::before {
  background: url(../img/i-radio-select.svg) center no-repeat; }

input[type="radio"] + .checkbox-label:hover::before {
  border: 3px solid rgba(29, 113, 184, 0.5);
  border-radius: 50%; }

.ico:before {
  width: 80px;
  height: 60px;
  display: block;
  content: "";
  margin: 0 auto 10px;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: center center; }

.ico__price80:before {
  background-image: url("../img/i-price80x60.svg"); }

.ico__bodytype80:before {
  background-image: url("../img/i-bodytype80x60.svg"); }

.ico__consumption80:before {
  background-image: url("../img/i-consumption80x60.svg"); }

.ico__transmission80:before {
  background-image: url("../img/i-transmission80x60.svg"); }

.ico__gastype80:before {
  background-image: url("../img/i-gastype80x60.svg"); }

.ico__forest:before {
  width: 150px;
  height: 150px;
  background-image: url("../img/i-forest.svg"); }

.ico__city:before {
  width: 150px;
  height: 150px;
  background-image: url("../img/i-city.svg"); }

.ico__track:before {
  width: 150px;
  height: 150px;
  background-image: url("../img/i-track.svg"); }

.ico--pdf:before {
  width: 52px;
  height: 54px;
  margin: 0;
  background-image: url("../img/i-pdf.svg"); }

.ico--fuel:before {
  width: 52px;
  height: 36px;
  margin: 0;
  background-image: url("../img/i-fuel.svg"); }

.i-inline {
  line-height: normal;
  font-size: 14px;
  letter-spacing: 0.1em;
  -webkit-text-decoration-line: underline;
  text-decoration-line: underline;
  font-style: italic;
  color: #23171A;
  display: inline-block; }
  .i-inline__bodytype:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 41px;
    height: 31px;
    margin-right: 15px;
    background: url("../img/i-bodytype.svg") center no-repeat; }
  .i-inline__capacity:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 41px;
    height: 31px;
    margin-right: 15px;
    background: url("../img/i-capacity.svg") center no-repeat; }
  .i-inline__transmission:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 41px;
    height: 31px;
    margin-right: 15px;
    background: url("../img/i-transmission.svg") center no-repeat; }
  .i-inline__gastype:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 41px;
    height: 31px;
    margin-right: 15px;
    background: url("../img/i-gastype.svg") center no-repeat; }
  .i-inline__path:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 41px;
    height: 31px;
    margin-right: 15px;
    background: url("../img/i-path.svg") center no-repeat; }
  .i-inline__available-tick:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 41px;
    height: 31px;
    margin-right: 15px;
    background: url("../img/i-available-tick.svg") center no-repeat; }
  .i-inline__price:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 41px;
    height: 31px;
    margin-right: 15px;
    background: url("../img/i-price.svg") center no-repeat; }
  .i-inline__testdrive:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 16px;
    height: 16px;
    margin-right: 10px;
    background: url("../img/i-testdrive.svg") center no-repeat; }
  .i-inline__available:before {
    display: inline-block;
    content: "";
    vertical-align: middle;
    width: 16px;
    height: 12px;
    margin-right: 10px;
    background: url("../img/i-available.svg") center no-repeat; }
  .i-inline__pdf:before {
    width: 34px;
    height: 34px;
    display: inline-block;
    content: "";
    margin-right: 30px;
    background: url("../img/i-pdf.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__phone:before {
    width: 19px;
    height: 26px;
    display: inline-block;
    content: "";
    margin-right: 10px;
    background: url("../img/i-phone-black.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__consult:before {
    width: 80px;
    height: 80px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-consult.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__form:before {
    width: 80px;
    height: 80px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-form.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__pen:before {
    width: 80px;
    height: 80px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-pen.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__car:before {
    width: 80px;
    height: 80px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-car.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__logo:before {
    width: 50px;
    height: 50px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-logo.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__auto-sale:before {
    width: 68px;
    height: 46px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-auto-sale.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__parts-sale:before {
    width: 68px;
    height: 46px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-parts-sale.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__sto:before {
    width: 53px;
    height: 69px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-sto.svg") center no-repeat;
    vertical-align: middle; }
  .i-inline__accesories:before {
    width: 64px;
    height: 46px;
    display: block;
    content: "";
    margin-right: 40px;
    background: url("../img/i-accesories.svg") center no-repeat;
    vertical-align: middle; }

.toggle-active {
  text-decoration: underline; }

.bold {
  font-weight: bold; }

.link {
  font-size: 14px;
  letter-spacing: .1em;
  color: #23171A;
  font-style: italic;
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }
  .link:hover {
    color: #1D71B8; }

.video {
  width: 100%;
  height: auto; }

.bg-gradient {
  background-color: #303A41;
  color: #fff;
  background-image: -webkit-radial-gradient(50% 50%, 51vw, rgba(176, 178, 173, 0.7) 0%, rgba(196, 196, 196, 0) 100%), -webkit-radial-gradient(50% 50%, 62vw, rgba(160, 161, 164, 0.6) 0%, rgba(196, 196, 196, 0) 72.93%, rgba(196, 196, 196, 0.04) 100%);
  background-image: -o-radial-gradient(50% 50%, 51vw, rgba(176, 178, 173, 0.7) 0%, rgba(196, 196, 196, 0) 100%), -o-radial-gradient(50% 50%, 62vw, rgba(160, 161, 164, 0.6) 0%, rgba(196, 196, 196, 0) 72.93%, rgba(196, 196, 196, 0.04) 100%);
  background-image: radial-gradient(51vw at 50% 50%, rgba(176, 178, 173, 0.7) 0%, rgba(196, 196, 196, 0) 100%), radial-gradient(62vw at 50% 50%, rgba(160, 161, 164, 0.6) 0%, rgba(196, 196, 196, 0) 72.93%, rgba(196, 196, 196, 0.04) 100%); }

.form--double {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }
  .form--double .textfield {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px); }
  .form--double .fieldset--full {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    text-align: center;
    margin-top: 30px; }

input, fieldset {
  vertical-align: middle;
  display: inline-block;
  font-size: 18px; }

.fieldset {
  border: none;
  padding: 0; }
  .fieldset--full {
    width: 100%; }

textarea {
  width: 200px;
  height: 100px;
  padding: 15px 20px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  resize: none;
  border: 1px solid #4D4F53;
  background-color: transparent;
  border-radius: 27px;
  outline: none;
  font-style: italic;
  color: inherit;
  font-family: inherit; }

.textfield {
  position: relative;
  padding: 0;
  margin: 0;
  border: none; }
  .textfield__placeholder {
    position: absolute;
    top: 18px;
    left: 20px;
    font-style: italic;
    font-size: 18px;
    color: #B5B7B3;
    -webkit-transition: all .3s;
    -o-transition: all .3s;
    transition: all .3s;
    pointer-events: none; }
  .textfield__textarea {
    height: 130px;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s; }
    .textfield__textarea:hover {
      border-color: #1D71B8;
      -webkit-box-shadow: 0px 0px 7px rgba(29, 113, 184, 0.8);
      box-shadow: 0px 0px 7px rgba(29, 113, 184, 0.8); }

.textfield__input:focus + .textfield__placeholder,
.textfield__input[data-empty="false"] + .textfield__placeholder {
  color: #23171A;
  font-size: 14px;
  -webkit-transform: translateY(-38px);
  -ms-transform: translateY(-38px);
  transform: translateY(-38px); }

.field-typical {
  width: 100%;
  padding: 17px 20px 15px;
  border: 1px solid #23171A;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border-radius: 100px;
  outline: none;
  font-family: inherit;
  font-style: italic;
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }
  .field-typical:hover {
    border-color: #1D71B8;
    -webkit-box-shadow: 0px 0px 7px rgba(29, 113, 184, 0.8);
    box-shadow: 0px 0px 7px rgba(29, 113, 184, 0.8); }
  .field-typical__select {
    width: 100%;
    border-color: #23171A;
    border-style: solid;
    border-width: 0 0 1px 0;
    cursor: pointer;
    font-size: 18px;
    font-style: italic;
    background: transparent;
    outline: none; }

.select {
  display: inline-block;
  position: relative;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 54px;
  line-height: 54px;
  -webkit-tap-highlight-color: transparent; }
  .select--expanded .select__list {
    opacity: 1;
    -webkit-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
    pointer-events: all; }
  .select--expanded .select__placeholder:before {
    height: 2px;
    background-color: #1D71B8; }
  .select--expanded .select__placeholder:after {
    -webkit-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    transform: rotate(180deg);
    border-top: 5px solid #1D71B8; }
  .select__label {
    position: absolute;
    left: 0;
    top: -22px;
    font-size: 14px;
    -ms-flex-item-align: start;
    align-self: flex-start;
    -webkit-box-flex: 0;
    -ms-flex-positive: 0;
    flex-grow: 0;
    font-style: italic;
    letter-spacing: .1em; }
  .select__placeholder {
    position: relative;
    padding: 5px 10px;
    padding-right: 20px;
    color: #B5B7B3;
    font-style: italic;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    line-height: 50px;
    height: 54px; }
    .select__placeholder:before {
      content: "";
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
      height: 1px;
      background-color: #23171A;
      -webkit-transition: all .3s;
      -o-transition: all .3s;
      transition: all .3s;
      will-change: transform; }
    .select__placeholder:after {
      content: "";
      position: absolute;
      right: 10px;
      top: calc(50% - 4px);
      border-top: 5px solid black;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      -webkit-transition: all .3s;
      -o-transition: all .3s;
      transition: all .3s; }
  .select__input {
    display: none; }
  .select__list {
    position: absolute;
    top: calc(100% + 3px);
    left: 0;
    width: 100%;
    border: 1px solid #CBCDC9;
    border-radius: 4px;
    -webkit-box-shadow: 0px 0px 14px #4D4F53;
    box-shadow: 0px 0px 14px #4D4F53;
    -webkit-transition: all .3s;
    -o-transition: all .3s;
    transition: all .3s;
    -webkit-transform: scale(1, 0.9);
    -ms-transform: scale(1, 0.9);
    transform: scale(1, 0.9);
    -webkit-transform-origin: 50% 0;
    -ms-transform-origin: 50% 0;
    transform-origin: 50% 0;
    pointer-events: none;
    opacity: 0;
    z-index: 5;
    will-change: transform; }
  .select__item {
    padding: 5px 17px;
    -webkit-transition: all .3s;
    -o-transition: all .3s;
    transition: all .3s;
    background-color: #fff; }
    .select__item:hover {
      -webkit-box-shadow: inset 0px 0px 4px rgba(77, 79, 83, 0.5);
      box-shadow: inset 0px 0px 4px rgba(77, 79, 83, 0.5); }

@-webkit-keyframes fIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes fIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@-webkit-keyframes strokeAnimate {
  0% {
    stroke-dashoffset: 1500;
    fill: #fff; }
  80% {
    stroke-dashoffset: 0;
    fill: #fff; }
  100% {
    stroke-dashoffset: 0;
    fill: #c03; } }

@keyframes strokeAnimate {
  0% {
    stroke-dashoffset: 1500;
    fill: #fff; }
  80% {
    stroke-dashoffset: 0;
    fill: #fff; }
  100% {
    stroke-dashoffset: 0;
    fill: #c03; } }

.mainslider {
  position: relative;
  -webkit-clip-path: ellipse(175vw 230vw at 50% calc(100% - 229.7vw));
  clip-path: ellipse(175vw 230vw at 50% calc(100% - 229.7vw));
  border-bottom: 1px solid red;
  z-index: 50; }
  @media (max-width: 767px) {
    .mainslider .fotorama__dot, .mainslider .fotorama__nav__frame.fotorama__active .fotorama__dot, .fotorama__nav__frame.fotorama__active .mainslider .fotorama__dot {
      display: none; } }
  @media (max-width: 767px) {
    .mainslider .fotorama__nav__shaft {
      width: 150px;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between;
      margin-left: auto;
      margin-right: auto; } }

.mainslider-wrapper {
  position: relative;
  overflow: hidden;
  z-index: 1; }
  .mainslider-wrapper__bg {
    position: absolute;
    bottom: 0;
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translateX(-50%); }

.fotorama__nav-wrap {
  position: absolute;
  bottom: 40px;
  left: 0;
  z-index: 10; }
  @media (max-width: 767px) {
    .fotorama__nav-wrap {
      bottom: 20px; } }

.fotorama__dot, .fotorama__nav__frame.fotorama__active .fotorama__dot {
  width: 10px;
  height: 10px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border: 1px solid #CC0033;
  background-color: #fff;
  -webkit-transition: all .3s;
  -o-transition: all .3s;
  transition: all .3s; }

.fotorama__nav__frame.fotorama__active .fotorama__dot {
  border-color: #fff;
  position: relative; }
  .fotorama__nav__frame.fotorama__active .fotorama__dot:after {
    display: block;
    content: "";
    position: absolute;
    width: 2px;
    height: 2px;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    background-color: #CC0033;
    border-radius: 50%; }

.fotorama__arr {
  margin-top: 0;
  margin-left: 5px;
  margin-right: 5px;
  width: 12px;
  height: 25px;
  display: inline-block;
  vertical-align: middle;
  position: static;
  background: url("../img/i-slider-arrow-prev.svg") center center no-repeat; }

.fotorama__arr--next {
  background-image: url("../img/i-slider-arrow-next.svg"); }

.fotorama__dot, .fotorama__nav__frame.fotorama__active .fotorama__dot {
  left: auto;
  top: auto;
  margin: 0;
  vertical-align: middle;
  margin-right: 5px;
  margin-left: 5px;
  -webkit-box-shadow: 1px 1px 7px rgba(44, 1, 12, 0.3);
  box-shadow: 1px 1px 7px rgba(44, 1, 12, 0.3); }

.fotorama__nav--dots .fotorama__nav__frame {
  width: auto;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }

.footer-slider {
  width: 100%;
  overflow: hidden; }
  @media (max-width: 1023px) {
    .footer-slider {
      display: none; } }
  .footer-slider__item {
    width: 301px;
    height: 176px;
    overflow: hidden;
    position: relative;
    outline: none; }
    .footer-slider__item img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
      object-fit: cover; }
    .footer-slider__item:after {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(35, 23, 26, 0.4);
      -webkit-box-shadow: rgba(77, 79, 83, 0.25);
      box-shadow: rgba(77, 79, 83, 0.25);
      z-index: 2;
      pointer-events: none; }

.slick-slide {
  outline: none !important; }

.slick-slider {
  width: 100%;
  overflow: hidden; }

.slick-dotted.slick-slider {
  margin-bottom: 0; }

.slider-carousel {
  width: 100%;
  overflow: hidden; }
  @media (max-width: 767px) {
    .slider-carousel {
      display: none; } }
  .slider-carousel__item {
    width: 360px;
    height: 180px;
    position: relative; }
    @media (max-width: 1023px) {
      .slider-carousel__item {
        width: 150px;
        height: 70px; } }
    .slider-carousel__item img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      outline: none;
      cursor: pointer; }

.header {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 100%;
  position: relative;
  z-index: 3; }
  .header-adress {
    margin-left: 40px;
    font-style: italic;
    font-size: 14px; }
    @media (max-width: 1023px) {
      .header-adress {
        display: none; } }
    .header-adress__icon {
      vertical-align: middle;
      margin-right: 18px; }
    .header-adress__text {
      vertical-align: middle; }
  .header__callback {
    margin-left: 35px;
    font-size: 14px;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline;
    color: #CC0033;
    -ms-flex-item-align: center;
    align-self: center;
    font-style: italic; }
    @media (max-width: 1023px) {
      .header__callback {
        display: none; } }

.top-bar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  height: 70px;
  padding: 0 50px;
  background: -webkit-gradient(linear, left top, left bottom, from(#F0F2F2), to(#FFFFFF));
  background: -webkit-linear-gradient(top, #F0F2F2 0%, #FFFFFF 100%);
  background: -o-linear-gradient(top, #F0F2F2 0%, #FFFFFF 100%);
  background: linear-gradient(180deg, #F0F2F2 0%, #FFFFFF 100%);
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }
  @media (max-width: 1023px) {
    .top-bar {
      max-width: 1320px;
      margin: 0 auto;
      padding-left: 0px;
      padding-right: 0px; } }
  @media screen and (max-width: 1023px) and (max-width: 992px) {
    .top-bar {
      padding-left: 15px;
      padding-right: 15px; } }

.logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  .logo__img {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column; }
    @media (max-width: 767px) {
      .logo__img {
        width: 100px; } }

.header__info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.lang {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  @media (max-width: 1023px) {
    .lang {
      display: none; } }
  .lang:hover .lang__item {
    max-width: 50px;
    padding: 5px; }
  .lang__item {
    padding: 5px;
    color: #CC0033;
    text-decoration: none;
    overflow: hidden;
    -webkit-transition: all .4s;
    -o-transition: all .4s;
    transition: all .4s;
    -webkit-transition-delay: .2s;
    -o-transition-delay: .2s;
    transition-delay: .2s; }
    .lang__item:first-of-type {
      padding: 0;
      max-width: 0; }

.header-search {
  margin: 0 60px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  @media (max-width: 1023px) {
    .header-search {
      display: none; } }
  .header-search:hover .header-search__input {
    width: 200px;
    height: 36px;
    padding: 5px 10px;
    color: #23171A; }
  .header-search:hover .header-search__input-wrapper:after {
    opacity: 0; }
  .header-search__input-wrapper {
    position: relative; }
    .header-search__input-wrapper:after {
      content: "";
      width: 8px;
      height: 1px;
      background-color: #CC0033;
      position: absolute;
      right: -4px;
      top: 20px;
      pointer-events: none;
      -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
      transform: rotate(45deg);
      -webkit-transition: all 0.3s;
      -o-transition: all 0.3s;
      transition: all 0.3s; }
  .header-search__input {
    font-size: inherit;
    font-family: inherit;
    color: transparent;
    width: 20px;
    height: 20px;
    border: 1px solid #CC0033;
    cursor: pointer;
    border-radius: 100px;
    background-color: transparent;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    outline: none;
    -webkit-transition: all .4s;
    -o-transition: all .4s;
    transition: all .4s; }

.header-contact {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  .header-contact .footer-phone {
    margin-top: 0;
    margin-right: 30px; }
    @media (max-width: 767px) {
      .header-contact .footer-phone {
        margin-right: 0; } }
    .header-contact .footer-phone:first-of-type {
      padding-left: 28px;
      background-image: url(../img/i-header-phone.svg);
      background-repeat: no-repeat;
      background-position: left center; }
      @media (max-width: 767px) {
        .header-contact .footer-phone:first-of-type {
          padding-left: 0;
          background-image: none; } }
    .header-contact .footer-phone:last-of-type {
      margin-right: 0; }
      @media (max-width: 767px) {
        .header-contact .footer-phone:last-of-type {
          display: none; } }
    .header-contact .footer-phone__number {
      font-weight: bold; }

nav {
  position: relative; }
  @media (max-width: 1023px) {
    nav {
      max-width: 1320px;
      margin: 0 auto;
      padding-left: 0px;
      padding-right: 0px;
      max-width: 100%;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }
  @media screen and (max-width: 1023px) and (max-width: 992px) {
    nav {
      padding-left: 15px;
      padding-right: 15px; } }

.nav, .nav__nav-secondary {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  height: 70px;
  margin: 0;
  padding: 0 50px 0 25px;
  background: -webkit-gradient(linear, left top, left bottom, from(#F0F2F2), to(#FFFFFF));
  background: -webkit-linear-gradient(top, #F0F2F2 0%, #FFFFFF 100%);
  background: -o-linear-gradient(top, #F0F2F2 0%, #FFFFFF 100%);
  background: linear-gradient(180deg, #F0F2F2 0%, #FFFFFF 100%);
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s;
  will-change: transform; }
  @media (max-width: 1023px) {
    .nav, .nav__nav-secondary {
      position: absolute;
      width: 300px;
      padding-top: 10px;
      padding-left: 13px;
      padding-right: 13px;
      padding-bottom: 30px;
      -webkit-transform: translateX(100%);
      -ms-transform: translateX(100%);
      transform: translateX(100%);
      right: 0;
      top: 1px;
      height: auto;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      z-index: 200;
      overflow: hidden; } }
  .nav--fixed {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 100; }
    @media (max-width: 1023px) {
      .nav--fixed {
        position: static;
        -webkit-box-sizing: border-box;
        box-sizing: border-box; } }
    .nav--fixed .nav-badge {
      height: auto;
      height: 100%; }
      .nav--fixed .nav-badge:after {
        display: none; }
    .nav--fixed .nav-badge__slogan {
      display: none; }
  @media (max-width: 1023px) {
    .nav--mobvisible {
      -webkit-transform: translateX(0);
      -ms-transform: translateX(0);
      transform: translateX(0); } }
  .nav__header {
    position: relative;
    display: none;
    height: 20px;
    padding: 20px 0; }
    @media (max-width: 1023px) {
      .nav__header {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center; }
        .nav__header:after {
          content: "";
          position: absolute;
          bottom: -1px;
          left: -5%;
          width: 110%;
          height: 1px;
          background-color: #23171A; } }
    .nav__header .lang {
      font-size: 16px;
      display: block; }
    .nav__header .header-search {
      display: block;
      margin: -6px 30px 0; }
      .nav__header .header-search:hover {
        width: 170px; }
    .nav__header .header-search__input {
      max-width: 100%; }
  .nav__item {
    list-style: none;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
    @media (max-width: 1023px) {
      .nav__item {
        padding-top: 10px;
        padding-bottom: 10px;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-pack: start;
        -ms-flex-pack: start;
        justify-content: flex-start;
        -webkit-box-align: start;
        -ms-flex-align: start;
        align-items: flex-start; } }
    .nav__item:hover .nav__nav-secondary {
      max-height: 80px; }
      @media (max-width: 1023px) {
        .nav__item:hover .nav__nav-secondary {
          max-height: none; } }
    .nav__item:hover .nav-auto {
      height: auto;
      max-height: 700px !important; }
    .nav__item__link {
      text-decoration: none;
      color: #23171A;
      padding: 0 25px;
      white-space: nowrap;
      -webkit-transition: all 0.3s;
      -o-transition: all 0.3s;
      transition: all 0.3s; }
      @media (max-width: 1023px) {
        .nav__item__link {
          padding: 0; } }
      .nav__item__link:hover {
        color: #CC0033; }
      .nav__item__link--has-child:after {
        display: inline-block;
        content: "";
        width: 7px;
        height: 4px;
        margin-left: 10px;
        background: url("../img/i-nav-arrow.svg") center no-repeat;
        vertical-align: middle;
        -webkit-transition: all .3s;
        -o-transition: all .3s;
        transition: all .3s;
        will-change: transform; }
      .nav__item__link--has-child:hover:after {
        -webkit-transform: rotate(-90deg);
        -ms-transform: rotate(-90deg);
        transform: rotate(-90deg); }
  .nav__icon {
    display: none; }
    @media (max-width: 1023px) {
      .nav__icon {
        display: inline-block;
        vertical-align: middle;
        margin-right: 15px; } }

.menu-close {
  margin-left: auto; }

.nav-badge {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 90px;
  height: 140px;
  position: absolute;
  top: 0;
  right: 55px;
  padding: 10px;
  text-align: center;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-color: #fff;
  z-index: 60; }
  @media (max-width: 1023px) {
    .nav-badge {
      position: relative;
      right: auto;
      left: 0;
      height: auto;
      margin-top: 10px;
      margin-bottom: 5px;
      width: 60px;
      padding: 0; } }
  @media (max-width: 767px) {
    .nav-badge {
      width: 50px;
      padding: 0; } }
  .nav-badge:after {
    content: "";
    position: absolute;
    display: block;
    width: 100%;
    height: 69px;
    bottom: 0;
    left: 0;
    -webkit-box-shadow: 0px 7px 14px rgba(77, 79, 83, 0.3);
    box-shadow: 0px 7px 14px rgba(77, 79, 83, 0.3); }
    @media (max-width: 1023px) {
      .nav-badge:after {
        display: none; } }
  .nav-badge img {
    max-width: 100%;
    height: auto; }
  .nav-badge__logo {
    width: 88%; }
  @media (max-width: 1023px) {
    .nav-badge__slogan {
      display: none; } }

.nav__nav-secondary {
  max-height: 0;
  overflow: hidden;
  background-color: #fff;
  position: absolute;
  top: 100%;
  left: 0;
  padding: 0;
  margin: 0;
  width: 100%;
  z-index: 100;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-transition: all .3s ease-out;
  -o-transition: all .3s ease-out;
  transition: all .3s ease-out; }
  @media (max-width: 1023px) {
    .nav__nav-secondary {
      -webkit-transform: none;
      -ms-transform: none;
      transform: none;
      position: static;
      margin-top: 10px;
      -webkit-box-shadow: none;
      box-shadow: none;
      padding-left: 70px;
      font-size: 14px;
      background-color: transparent;
      background-image: none;
      -webkit-box-sizing: border-box;
      box-sizing: border-box; } }
  .nav__nav-secondary .nav__item__link:after {
    display: none; }
  @media (max-width: 1023px) {
    .nav__nav-secondary .nav__item {
      padding-top: 0;
      padding-bottom: 10px; }
      .nav__nav-secondary .nav__item:last-of-type {
        padding-bottom: 0; } }

.nav-auto {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  text-transform: uppercase;
  font-size: 18px;
  font-family: "Toyota Display";
  font-weight: bold;
  letter-spacing: .1em; }
  .nav-auto__switchers {
    width: 345px;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    padding-top: 35px; }
    @media (max-width: 1023px) {
      .nav-auto__switchers {
        width: 100%;
        background-color: transparent;
        max-height: auto;
        margin-top: 0px;
        position: static;
        text-align: left;
        padding-top: 0;
        -webkit-box-shadow: none;
        box-shadow: none;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        padding-left: 70px;
        font-size: 14px;
        background-image: none;
        padding-left: 0; } }
  .nav-auto__switcher {
    text-align: center;
    text-transform: none;
    margin-bottom: 10px;
    cursor: pointer; }
    @media (max-width: 1023px) {
      .nav-auto__switcher {
        margin-bottom: 0;
        padding-bottom: 10px;
        text-align: left;
        font-weight: normal;
        font-size: 14px;
        font-family: "Toyota Text";
        letter-spacing: normal; }
        .nav-auto__switcher:last-of-type {
          padding-bottom: 0; } }
  .nav-auto__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    padding-top: 30px;
    padding-bottom: 50px;
    padding-right: 250px;
    box-sizin: border-box;
    -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
    box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }
    @media (max-width: 1023px) {
      .nav-auto__grid {
        display: none; } }
  .nav-auto__item {
    width: 250px;
    text-align: center;
    margin-bottom: 15px;
    cursor: pointer; }
  .nav-auto__img {
    max-width: 100%; }

.menu {
  display: none;
  width: 40px; }
  @media (max-width: 1023px) {
    .menu {
      display: block;
      margin-top: 3px; } }
  .menu__line {
    height: 4px;
    margin-bottom: 4px;
    background-color: #CC0033;
    border-radius: 3px;
    margin-left: auto;
    margin-right: auto; }
    @media (max-width: 767px) {
      .menu__line {
        width: 26px;
        height: 3px; } }
    .menu__line:last-of-type {
      margin-bottom: 0; }
  .menu__text {
    margin-top: -5px;
    font-style: italic;
    font-size: 12px;
    text-align: center; }

#map-footer {
  height: 350px; }
  @media (max-width: 767px) {
    #map-footer {
      height: 490px; } }

.footer-feedback {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  padding-top: 100px;
  padding-bottom: 90px; }
  @media screen and (max-width: 992px) {
    .footer-feedback {
      padding-left: 15px;
      padding-right: 15px; } }
  @media (max-width: 1023px) {
    .footer-feedback {
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center; } }

.footer-form {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 6 - 30px);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: 0; }
  @media (max-width: 1023px) {
    .footer-form {
      width: calc(100% / 12 * 10 - 30px); } }
  @media (max-width: 767px) {
    .footer-form {
      width: calc(100% / 12 * 12 - 30px);
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column; } }
  .footer-form fieldset {
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1; }
  .footer-form .btn-typical {
    margin-left: 20px; }
    @media (max-width: 767px) {
      .footer-form .btn-typical {
        margin-left: 0;
        margin-top: 20px;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center; } }

.footer-feedback-text {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 6 - 30px); }
  @media (max-width: 1023px) {
    .footer-feedback-text {
      width: calc(100% / 12 * 10 - 30px);
      margin-bottom: 20px; } }
  @media (max-width: 767px) {
    .footer-feedback-text {
      width: calc(100% / 12 * 12 - 30px); } }
  .footer-feedback-text__item {
    font-style: italic;
    margin: 0; }
    .footer-feedback-text__item--strong {
      font-weight: bold;
      font-style: normal;
      margin-bottom: 10px; }

.footer-info {
  padding: 120px 0;
  color: #fff;
  background: #23171A url("../img/bg-footer.png") center bottom no-repeat; }
  @media (max-width: 1023px) {
    .footer-info {
      padding: 100px 0; } }
  .footer-info__wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    max-width: 1320px;
    margin: 0 auto;
    padding-left: 0px;
    padding-right: 0px; }
    @media screen and (max-width: 992px) {
      .footer-info__wrapper {
        padding-left: 15px;
        padding-right: 15px; } }
    @media (max-width: 767px) {
      .footer-info__wrapper {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column; } }
  .footer-info__item {
    font-size: 14px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px); }
    @media (max-width: 1023px) {
      .footer-info__item {
        width: calc(100% / 12 * 4 - 30px); } }
    @media (max-width: 767px) {
      .footer-info__item {
        width: calc(100% / 12 * 12 - 30px);
        margin-bottom: 40px; } }
    .footer-info__item--small {
      width: calc(100% / 12 * 2 - 30px); }
      @media (max-width: 1023px) {
        .footer-info__item--small {
          width: calc(100% / 12 * 4 - 30px); } }
      @media (max-width: 767px) {
        .footer-info__item--small {
          width: calc(100% / 12 * 12 - 30px); } }
    .footer-info__item--big {
      width: calc(100% / 12 * 4 - 30px); }
      @media (max-width: 1023px) {
        .footer-info__item--big {
          width: calc(100% / 12 * 7 - 30px);
          margin-left: auto;
          margin-right: auto;
          text-align: center;
          margin-top: 50px; } }
      @media (max-width: 767px) {
        .footer-info__item--big {
          width: calc(100% / 12 * 12 - 30px);
          text-align: left; } }
  .footer-info__heading {
    margin-bottom: 10px;
    font-size: 18px;
    font-weight: bold; }
  .footer-info__creators {
    font-size: 18px;
    color: inherit;
    font-weight: bold;
    text-decoration: none; }
    .footer-info__creators:hover {
      text-decoration: underline; }

.social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row; }
  .social__item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    margin-right: 20px;
    background-color: #fff;
    border-radius: 5px;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s; }
    .social__item:last-of-type {
      margin-right: 0; }
    .social__item--tw:hover {
      background-color: #55ACEE; }
      .social__item--tw:hover svg path {
        fill: #fff; }
    .social__item--fb:hover {
      background-color: #3B5999; }
      .social__item--fb:hover svg path {
        fill: #fff; }
    .social__item--yt:hover {
      background-color: #f00; }
      .social__item--yt:hover svg path {
        fill: #fff; }
      .social__item--yt:hover #path1_fill3 {
        fill: #f00; }

.footer-address__icon {
  margin-right: 17px;
  vertical-align: middle; }

.footer-address__text {
  font-style: italic; }

.footer-phone {
  font-size: 14px;
  margin-top: 10px; }
  .footer-phone__heading {
    font-style: italic; }
  .footer-phone__number {
    text-decoration: none;
    font-family: "Toyota Display";
    color: inherit; }
    .footer-phone__number:hover {
      text-decoration: underline; }

.footer-nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  padding-top: 65px;
  padding-bottom: 60px; }
  @media screen and (max-width: 992px) {
    .footer-nav {
      padding-left: 15px;
      padding-right: 15px; } }
  .footer-nav__list {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px);
    position: relative;
    padding: 0;
    margin-top: 0;
    margin-bottom: 0; }
    @media (max-width: 767px) {
      .footer-nav__list {
        width: calc(100% / 12 * 12 - 30px); } }
    .footer-nav__list--decorated {
      padding-left: 16px; }
      .footer-nav__list--decorated:after {
        content: "";
        display: block;
        position: absolute;
        left: 0;
        top: 0;
        width: 6px;
        height: 100%;
        background-color: #CC0033;
        border-radius: 100px; }
  .footer-nav__item {
    list-style: none;
    margin-bottom: 10px; }
  .footer-nav__link {
    color: inherit;
    text-decoration: none;
    font-style: italic; }
    .footer-nav__link--strong {
      font-weight: bold;
      font-style: normal;
      letter-spacing: .1em; }

.cars-title {
  margin-top: 50px; }

.car-grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  margin-top: 20px;
  margin-bottom: -30px; }
  @media screen and (max-width: 992px) {
    .car-grid {
      padding-left: 15px;
      padding-right: 15px; } }
  .car-grid-item {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    text-align: center;
    margin-bottom: 30px;
    padding-bottom: 20px;
    border-radius: 10px;
    -webkit-transition: all .3s;
    -o-transition: all .3s;
    transition: all .3s; }
    @media (max-width: 1023px) {
      .car-grid-item {
        width: calc(100% / 12 * 6 - 30px); } }
    @media (max-width: 767px) {
      .car-grid-item {
        margin-bottom: 10px; } }
    @media (min-width: 1024px) {
      .car-grid-item:hover {
        -webkit-box-shadow: 0px 0px 14px #4D4F53;
        box-shadow: 0px 0px 14px #4D4F53;
        padding-bottom: 10px;
        padding-top: 10px;
        margin-top: -10px; } }
    @media (min-width: 1024px) {
      .car-grid-item:hover .car-grid-item__img {
        -webkit-transform: scale(1.1);
        -ms-transform: scale(1.1);
        transform: scale(1.1); } }
    @media (min-width: 1024px) {
      .car-grid-item:hover .car-grid-item__heading {
        padding-top: 10px; } }
    .car-grid-item__img {
      width: 80%;
      -webkit-transition: all .3s;
      -o-transition: all .3s;
      transition: all .3s; }
      @media (max-width: 767px) {
        .car-grid-item__img {
          width: 100%; } }
    .car-grid-item__heading {
      margin-top: 10px;
      margin-bottom: 10px;
      font-size: 24px;
      font-family: "Toyota Display";
      letter-spacing: .1em;
      font-weight: bold;
      cursor: default;
      -webkit-transition: all .3s;
      -o-transition: all .3s;
      transition: all .3s;
      text-transform: uppercase; }
      @media (max-width: 767px) {
        .car-grid-item__heading {
          font-size: 18px; } }
    .car-grid-item__price {
      margin-top: 0;
      margin-bottom: 10px;
      font-size: 14px;
      font-style: italic;
      letter-spacing: .1em;
      cursor: default; }
      @media (max-width: 767px) {
        .car-grid-item__price {
          display: none; } }
    .car-grid-item__link {
      margin: 0 10px 0; }
      @media (max-width: 1023px) {
        .car-grid-item__link {
          display: none; } }

.services {
  background-image: url(../img/bg-services.png);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain; }
  @media (max-width: 1023px) {
    .services {
      background-image: none; } }

.services-list-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px; }
  @media screen and (max-width: 992px) {
    .services-list-wrapper {
      padding-left: 15px;
      padding-right: 15px; } }
  @media (max-width: 1023px) {
    .services-list-wrapper {
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      background-image: url(../img/bg-services-toyota.svg);
      background-position: center;
      background-repeat: no-repeat; } }

.services-list {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 6 - 30px);
  padding-right: 0%;
  background-color: #fff;
  background-image: url(../img/bg-services-toyota.svg);
  background-repeat: no-repeat;
  background-position: center center;
  box-sizing: border-box;
  -webkit-box-shadow: 10px 10px 40px rgba(77, 79, 83, 0.3);
  box-shadow: 10px 10px 40px rgba(77, 79, 83, 0.3); }
  @media (max-width: 1023px) {
    .services-list {
      -webkit-box-shadow: none;
      box-shadow: none;
      background-image: none;
      background-color: transparent; } }
  @media (max-width: 767px) {
    .services-list {
      width: calc(100% / 12 * 12 - 30px); } }
  .services-list__item {
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    margin: 90px 0;
    padding-left: 80px;
    cursor: pointer; }
    @media (max-width: 1023px) {
      .services-list__item {
        padding-left: 0;
        margin: 70px 0; } }
    @media (max-width: 767px) {
      .services-list__item {
        margin: 90px 0; } }
    @media (max-width: 1023px) {
      .services-list__item:first-of-type {
        margin-top: 30px; } }
    .services-list__item:after {
      content: "";
      display: block;
      width: 75px;
      border-top: 1px dashed #CC0033;
      position: absolute;
      top: 50%;
      left: 0;
      opacity: .4;
      -webkit-transition: all 0.3s;
      -o-transition: all 0.3s;
      transition: all 0.3s; }
      @media (max-width: 1023px) {
        .services-list__item:after {
          display: none; } }
    .services-list__item:hover .services-list__icon {
      opacity: 1; }
    .services-list__item:hover:after {
      opacity: 1; }
    .services-list__item:hover .services-list__name {
      font-weight: bold; }
  .services-list__icon {
    vertical-align: middle;
    opacity: .4;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s; }
    @media (max-width: 1023px) {
      .services-list__icon {
        opacity: 1; } }
  .services-list__name {
    display: inline-block;
    margin-left: 30px;
    font-size: 24px;
    letter-spacing: .1em;
    color: inherit;
    text-decoration: none; }
    @media (max-width: 767px) {
      .services-list__name {
        font-size: 18px; } }

.news .btn-typical {
  display: inline-block; }

.news .section-title {
  margin-bottom: 50px; }

.news-grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }
  @media screen and (max-width: 992px) {
    .news-grid {
      padding-left: 15px;
      padding-right: 15px; } }
  .news-grid-item {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    letter-spacing: .1em; }
    .news-grid-item__date {
      position: relative;
      color: #4D4F53;
      font-size: 24px;
      font-weight: bold; }
      .news-grid-item__date:before {
        content: "";
        display: inline-block;
        height: 18px;
        width: 6px;
        margin-right: 10px;
        background-color: #CC0033;
        border-radius: 100px; }
    .news-grid-item__img {
      width: 100%;
      height: auto; }
    .news-grid-item__heading {
      font-size: 24px;
      font-style: "Toyota Display";
      font-weight: bold;
      letter-spacing: .1em; }
      @media (max-width: 767px) {
        .news-grid-item__heading {
          font-size: 18px;
          letter-spacing: .1em; } }
    .news-grid-item--half {
      width: calc(100% / 12 * 6 - 30px);
      margin-bottom: 100px; }
      @media (max-width: 1023px) {
        .news-grid-item--half {
          width: calc(100% / 12 * 5 - 30px); } }
      @media (max-width: 767px) {
        .news-grid-item--half {
          width: calc(100% / 12 * 12 - 30px);
          margin-bottom: 30px; } }
    .news-grid-item--half .news-grid-item__text {
      padding-left: 45px;
      position: relative;
      padding-right: 80px; }
      @media (max-width: 1023px) {
        .news-grid-item--half .news-grid-item__text {
          margin-top: 15px;
          padding-right: 0px; } }
      @media (max-width: 767px) {
        .news-grid-item--half .news-grid-item__text {
          padding-left: 0; } }
    .news-grid-item--half .news-grid-item__date {
      position: absolute;
      left: 0;
      top: 0;
      -webkit-transform: rotate(90deg) translateY(4px);
      -ms-transform: rotate(90deg) translateY(4px);
      transform: rotate(90deg) translateY(4px);
      -webkit-transform-origin: 0 100%;
      -ms-transform-origin: 0 100%;
      transform-origin: 0 100%; }
      @media (max-width: 1023px) {
        .news-grid-item--half .news-grid-item__date {
          top: -20px; } }
      @media (max-width: 767px) {
        .news-grid-item--half .news-grid-item__date {
          position: static;
          -webkit-transform: none;
          -ms-transform: none;
          transform: none; } }
    .news-grid-item--full {
      width: calc(100% / 12 * 10 - 30px);
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
      -ms-flex-direction: row;
      flex-direction: row;
      -webkit-box-align: start;
      -ms-flex-align: start;
      align-items: flex-start;
      margin-bottom: 50px; }
      @media (max-width: 1023px) {
        .news-grid-item--full {
          width: calc(100% / 12 * 12 - 30px); } }
      @media (max-width: 767px) {
        .news-grid-item--full {
          -webkit-box-orient: vertical;
          -webkit-box-direction: normal;
          -ms-flex-direction: column;
          flex-direction: column;
          margin-bottom: 30px; } }
    .news-grid-item--full .news-grid-item__img {
      width: 28%;
      height: auto;
      margin-right: 2.8%; }
      @media (max-width: 1023px) {
        .news-grid-item--full .news-grid-item__img {
          width: 40%; } }
      @media (max-width: 767px) {
        .news-grid-item--full .news-grid-item__img {
          width: 100%; } }
    .news-grid-item--full .news-grid-item__text {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
      -ms-flex-direction: row;
      flex-direction: row;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      height: 100%; }
    .news-grid-item--full .news-grid-item__date {
      margin-right: 55px; }
      @media (max-width: 1023px) {
        .news-grid-item--full .news-grid-item__date {
          margin-top: 10px; } }
      @media (max-width: 767px) {
        .news-grid-item--full .news-grid-item__date {
          margin-right: 0; } }
    .news-grid-item--full .news-grid-item__heading {
      width: 69.2%; }
      @media (max-width: 1023px) {
        .news-grid-item--full .news-grid-item__heading {
          width: 100%; } }
    @media (max-width: 767px) {
      .news-grid-item__text p {
        display: none; } }
    .news-grid-item .btn-more {
      float: right;
      margin-top: auto; }
      @media (max-width: 767px) {
        .news-grid-item .btn-more {
          display: none;
          float: none; } }
      @media (max-width: 767px) {
        .news-grid-item .btn-more:after {
          margin-left: 0;
          padding: 5px; } }

.page-models-head {
  min-height: 210px;
  color: #23171A;
  padding-bottom: 0; }
  .page-models-head .breadcrumbs {
    padding-top: 70px; }
    .page-models-head .breadcrumbs__item:not(:first-child)::before {
      background: #23171A; }

.page-models-filter {
  padding: 50px 0; }
  @media (max-width: 1023px) {
    .page-models-filter {
      display: none; } }

.filter {
  width: 91.66667%;
  margin: 0 auto;
  text-align: center; }
  .filter__title {
    font-family: "Toyota Display";
    font-size: 24px;
    text-align: center;
    letter-spacing: 0.1em;
    color: #23171A;
    font-weight: bold; }
  .filter__icons {
    padding: 50px 0 0; }
  .filter__item {
    cursor: pointer;
    line-height: normal;
    font-size: 18px;
    color: #23171A;
    float: left;
    width: 16.66667%;
    padding-left: 13px;
    padding-right: 13px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }
  .filter__dragndrop {
    margin-top: 50px;
    padding: 60px 110px;
    border: 3px dashed #B5B7B3; }
    .filter__dragndrop__text {
      font-family: "Toyota Display";
      line-height: normal;
      font-size: 24px;
      letter-spacing: 0.1em;
      color: #B5B7B3;
      font-weight: bold; }
  .filter-price {
    display: none; }
    .filter-price:after {
      right: 80%;
      margin-right: -25px; }
    .filter-price:before {
      right: 80%;
      margin-right: -28px; }
  .filter-bodytype {
    display: none; }
    .filter-bodytype:after {
      right: 66%;
      margin-right: -25px; }
    .filter-bodytype:before {
      right: 66%;
      margin-right: -28px; }
  .filter-consumption {
    display: none; }
    .filter-consumption:after {
      right: 53%;
      margin-right: -25px; }
    .filter-consumption:before {
      right: 53%;
      margin-right: -28px; }
  .filter-transmission {
    display: none; }
    .filter-transmission:after {
      right: 39%;
      margin-right: -25px; }
    .filter-transmission:before {
      right: 39%;
      margin-right: -28px; }
  .filter-gastype {
    display: none; }
    .filter-gastype:after {
      right: 25%;
      margin-right: -17px; }
    .filter-gastype:before {
      right: 25%;
      margin-right: -20px; }
  .filter-wrapper {
    padding: 50px 0 50px;
    margin: 50px 0 75px;
    background: #FFFFFF;
    border: 3px solid #B5B7B3;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    position: relative; }
    .filter-wrapper:after {
      display: none;
      content: "";
      position: absolute;
      top: -17px;
      border-bottom: 17px solid #ffffff;
      border-left: 17px solid transparent;
      border-right: 17px solid transparent; }
    .filter-wrapper:before {
      display: none;
      content: "";
      position: absolute;
      top: -22px;
      border-bottom: 20px solid #B5B7B3;
      border-left: 20px solid transparent;
      border-right: 20px solid transparent; }

.page-models-cars {
  margin-top: 100px; }
  @media (max-width: 1023px) {
    .page-models-cars {
      margin-top: 0px;
      padding-bottom: 0; } }

.filter-block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  .filter-block__title {
    display: block;
    float: left;
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    text-align: center;
    letter-spacing: 0.1em;
    color: #23171A;
    font-weight: bold; }
  .filter-block__switches {
    display: block;
    float: left;
    width: 75%; }
    .filter-block__switches--range {
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      padding-left: 115px; }
  .filter-block__switch-label {
    padding: 15px 0 15px 15px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    display: block;
    float: left;
    width: 33.333%; }
  .filter-block .irs-line {
    background: none;
    background-color: #CBCDC9;
    height: 2px;
    border: none;
    top: 33px;
    width: 99%;
    left: .5%; }
  .filter-block .irs-grid-pol.small {
    display: none; }
  .filter-block .irs-slider {
    width: 12px;
    height: 12px;
    top: 28px;
    border: none;
    background: none;
    background-color: #1D71B8;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    z-index: 7; }
    .filter-block .irs-slider:after {
      content: "";
      display: block;
      position: absolute;
      left: 50%;
      top: 50%;
      -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
      width: 24px;
      height: 24px;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      border: 1px solid #1D71B8;
      border-radius: 50%; }
  .filter-block .irs-bar {
    height: 2px;
    border: none;
    background: none;
    background-color: #1D71B8; }
  .filter-block .irs-grid-text {
    color: #1D71B8;
    font-size: 14px; }
  .filter-block .irs-grid-pol {
    top: -22px;
    background-color: #CBCDC9;
    width: 4px;
    height: 16px; }
  .filter-block .irs-bar-edge {
    display: none; }
  .filter-block .js-irs-0:before, .filter-block .js-irs-0:after {
    content: "";
    position: absolute;
    top: 19px;
    width: 8px;
    height: 30px;
    background-color: #fff;
    border: 2px solid #1D71B8;
    border-radius: 100px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    z-index: 2; }
  .filter-block .js-irs-0:before {
    left: 2px; }
  .filter-block .js-irs-0:after {
    right: 2px; }

#carbox {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }
  #carbox .car-grid-item {
    cursor: -webkit-grab;
    cursor: grab;
    padding-bottom: 20px;
    overflow: hidden;
    padding-bottom: 0; }
    #carbox .car-grid-item:active {
      cursor: -webkit-grabbing;
      cursor: grabbing; }
    #carbox .car-grid-item:hover {
      -webkit-box-shadow: none;
      box-shadow: none; }
    #carbox .car-grid-item .car-grid-item__price,
    #carbox .car-grid-item .car-grid-item__link {
      display: none; }
    #carbox .car-grid-item:hover .car-grid-item__img {
      -webkit-transform: none;
      -ms-transform: none;
      transform: none; }
    #carbox .car-grid-item:hover .car-grid-item__heading {
      padding-top: 0; }

#carlist .car-grid-item {
  cursor: -webkit-grab;
  cursor: grab; }
  #carlist .car-grid-item:active {
    cursor: -webkit-grabbing; }

.available-car-info {
  padding: 100px 0; }
  @media (max-width: 1023px) {
    .available-car-info {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      padding-bottom: 0; } }
  .available-car-info__description {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 7 - 30px);
    background: white;
    -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    color: #23171A;
    padding: 50px 35px 50px 110px;
    float: right;
    -webkit-transform: translateY(15%);
    -ms-transform: translateY(15%);
    transform: translateY(15%); }
    @media (max-width: 1023px) {
      .available-car-info__description {
        padding: 50px 20px;
        float: none;
        -webkit-transform: translateY(-11%);
        -ms-transform: translateY(-11%);
        transform: translateY(-11%);
        width: calc(100% / 12 * 11 - 30px); } }
    @media (max-width: 767px) {
      .available-car-info__description {
        padding: 105px 10px 50px;
        width: calc(100% / 12 * 12);
        position: relative;
        margin: 0; } }
  .available-car-info__image {
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px);
    height: 450px;
    position: absolute;
    z-index: 1; }
    @media (max-width: 1023px) {
      .available-car-info__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 530px;
        position: relative; } }
    @media (max-width: 767px) {
      .available-car-info__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 215px;
        position: relative; } }
    .available-car-info__image img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }
  .available-car-info__title {
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    letter-spacing: 0.1em;
    font-weight: bold;
    width: 84%; }
    @media (max-width: 767px) {
      .available-car-info__title {
        width: calc(100% / 12 * 12); } }
  .available-car-info__info {
    padding-top: 10px;
    line-height: normal;
    font-size: 18px; }
  .available-car-info__more {
    padding-top: 20px; }

.page-models-testdrive {
  position: relative;
  padding: 160px 0;
  margin-bottom: 200px;
  background: url(../img/bg-testdrive.jpg);
  background-position: left center;
  background-size: cover;
  color: white; }
  .page-models-testdrive:after {
    content: "";
    position: absolute;
    display: block;
    width: 58%;
    height: 100%;
    right: 0;
    top: 0;
    background-image: -webkit-linear-gradient(179.73deg, rgba(35, 23, 26, 0.8) 20.92%, rgba(35, 23, 26, 0.4566) 83.12%, rgba(35, 23, 26, 0) 99.63%);
    background-image: -o-linear-gradient(179.73deg, rgba(35, 23, 26, 0.8) 20.92%, rgba(35, 23, 26, 0.4566) 83.12%, rgba(35, 23, 26, 0) 99.63%);
    background-image: linear-gradient(270.27deg, rgba(35, 23, 26, 0.8) 20.92%, rgba(35, 23, 26, 0.4566) 83.12%, rgba(35, 23, 26, 0) 99.63%);
    z-index: 0;
    opacity: .8; }
    @media (max-width: 1023px) {
      .page-models-testdrive:after {
        width: 100%; } }
  @media (max-width: 767px) {
    .page-models-testdrive {
      padding: 70px 0; } }

.test-drive__wrapper {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 6 - 30px);
  margin-left: calc(100% / 12 * 6 + 15px);
  position: relative;
  z-index: 3; }
  @media (max-width: 1023px) {
    .test-drive__wrapper {
      width: calc(100% / 12 * 10 - 30px);
      margin-left: calc(100% / 12 * 1 + 15px); } }
  @media (max-width: 767px) {
    .test-drive__wrapper {
      margin-left: calc(100% / 12 * 0 + 15px);
      width: calc(100% / 12 * 12 - 30px); } }

.test-drive__title {
  font-family: "Toyota Display";
  line-height: normal;
  font-size: 40px;
  font-weight: bold; }
  @media (max-width: 767px) {
    .test-drive__title {
      font-size: 26px; } }

.test-drive__button-text {
  font-size: 18px;
  letter-spacing: 0.1em;
  color: #FFFFFF; }

.page-availible-head {
  background-image: url(../img/bg-available.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.available-card {
  margin-top: 100px;
  position: relative; }
  @media (max-width: 1023px) {
    .available-card {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: reverse;
      -ms-flex-direction: column-reverse;
      flex-direction: column-reverse;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }
  .available-card__description {
    background: white;
    -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    color: #23171A;
    padding: 50px 20px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 5 - 30px);
    position: absolute;
    -webkit-transform: translateY(15%);
    -ms-transform: translateY(15%);
    transform: translateY(15%);
    z-index: 1; }
    @media (max-width: 1023px) {
      .available-card__description {
        width: calc(100% / 12 * 11 - 30px);
        position: relative;
        -webkit-transform: none;
        -ms-transform: none;
        transform: none;
        padding: 20px 20px 50px; } }
    @media (max-width: 767px) {
      .available-card__description {
        width: calc(100% / 12 * 12);
        position: relative;
        -webkit-transform: translateY(-6%);
        -ms-transform: translateY(-6%);
        transform: translateY(-6%);
        padding: 50px 10px 50px;
        z-index: 0; } }
  .available-card__title {
    margin: 0 0 10px;
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    letter-spacing: .1em;
    font-weight: bold; }
  .available-card__text {
    margin: 10px 0;
    line-height: normal;
    font-size: 18px; }
  .available-card__line {
    margin: 7px 0;
    line-height: normal;
    font-size: 18px; }
  .available-card__more {
    display: inline-block;
    margin-top: 20px; }
  .available-card__image {
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 8 - 30px);
    height: 600px;
    float: right;
    position: relative; }
    .available-card__image img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }
    @media (max-width: 1023px) {
      .available-card__image {
        width: calc(100% / 12 * 12 - 30px);
        float: none;
        height: 520px; } }
    @media (max-width: 767px) {
      .available-card__image {
        width: calc(100% / 12 * 12 - 30px);
        float: none;
        height: 215px; } }

@media (max-width: 1023px) {
  .page-automobile .pagenav {
    display: none; } }

.pagenav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  padding: 30px 0;
  margin: 0;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }
  .pagenav__item {
    list-style: none;
    position: relative; }
    .pagenav__item:after {
      content: "";
      position: absolute;
      bottom: -5px;
      left: 0;
      display: block;
      width: 100%;
      height: 5px;
      border-radius: 6px;
      background: #CC0033;
      opacity: 0;
      -webkit-transform: translateY(10px);
      -ms-transform: translateY(10px);
      transform: translateY(10px);
      -webkit-transition: all 0.3s;
      -o-transition: all 0.3s;
      transition: all 0.3s; }
    .pagenav__item--active:after, .pagenav__item:hover:after {
      opacity: 1;
      -webkit-transform: translateY(0px);
      -ms-transform: translateY(0px);
      transform: translateY(0px); }
  .pagenav__item + .pagenav__item {
    margin-left: 50px; }
  .pagenav__link {
    color: inherit;
    display: inline-block;
    text-decoration: none;
    padding: 10px 0px; }
  .pagenav--smallgap .pagenav__item + .pagenav__item {
    margin-left: 30px; }

.color-selector {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .color-selector__item {
    width: 55px;
    height: 55px;
    border-radius: 6px;
    margin-top: 17px;
    border: 1px solid #B5B7B3;
    list-style: none;
    cursor: pointer;
    will-change: transform;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s; }
    .color-selector__item--c1 {
      background-image: -webkit-linear-gradient(45deg, #dedede 27.07%, rgba(222, 222, 222, 0.8) 49.72%, #dedede 70.96%);
      background-image: -o-linear-gradient(45deg, #dedede 27.07%, rgba(222, 222, 222, 0.8) 49.72%, #dedede 70.96%);
      background-image: linear-gradient(45deg, #dedede 27.07%, rgba(222, 222, 222, 0.8) 49.72%, #dedede 70.96%); }
    .color-selector__item--c2 {
      background-image: -webkit-linear-gradient(45deg, black 27.07%, rgba(0, 0, 0, 0.8) 49.72%, black 70.96%);
      background-image: -o-linear-gradient(45deg, black 27.07%, rgba(0, 0, 0, 0.8) 49.72%, black 70.96%);
      background-image: linear-gradient(45deg, black 27.07%, rgba(0, 0, 0, 0.8) 49.72%, black 70.96%); }
    .color-selector__item--c3 {
      background-image: -webkit-linear-gradient(45deg, #f2f2f0 27.07%, rgba(242, 242, 240, 0.8) 49.72%, #f2f2f0 70.96%);
      background-image: -o-linear-gradient(45deg, #f2f2f0 27.07%, rgba(242, 242, 240, 0.8) 49.72%, #f2f2f0 70.96%);
      background-image: linear-gradient(45deg, #f2f2f0 27.07%, rgba(242, 242, 240, 0.8) 49.72%, #f2f2f0 70.96%); }
    .color-selector__item--c4 {
      background-image: -webkit-linear-gradient(45deg, #525252 27.07%, rgba(82, 82, 82, 0.8) 49.72%, #525252 70.96%);
      background-image: -o-linear-gradient(45deg, #525252 27.07%, rgba(82, 82, 82, 0.8) 49.72%, #525252 70.96%);
      background-image: linear-gradient(45deg, #525252 27.07%, rgba(82, 82, 82, 0.8) 49.72%, #525252 70.96%); }
    .color-selector__item--c5 {
      background-image: -webkit-linear-gradient(45deg, #011924 27.07%, rgba(1, 25, 36, 0.8) 49.72%, #011924 70.96%);
      background-image: -o-linear-gradient(45deg, #011924 27.07%, rgba(1, 25, 36, 0.8) 49.72%, #011924 70.96%);
      background-image: linear-gradient(45deg, #011924 27.07%, rgba(1, 25, 36, 0.8) 49.72%, #011924 70.96%); }
    .color-selector__item--c6 {
      background-image: -webkit-linear-gradient(45deg, #00000d 27.07%, rgba(0, 0, 13, 0.8) 49.72%, #00000d 70.96%);
      background-image: -o-linear-gradient(45deg, #00000d 27.07%, rgba(0, 0, 13, 0.8) 49.72%, #00000d 70.96%);
      background-image: linear-gradient(45deg, #00000d 27.07%, rgba(0, 0, 13, 0.8) 49.72%, #00000d 70.96%); }
    .color-selector__item--c7 {
      background-image: -webkit-linear-gradient(45deg, #9d1723 27.07%, rgba(157, 23, 35, 0.8) 49.72%, #9d1723 70.96%);
      background-image: -o-linear-gradient(45deg, #9d1723 27.07%, rgba(157, 23, 35, 0.8) 49.72%, #9d1723 70.96%);
      background-image: linear-gradient(45deg, #9d1723 27.07%, rgba(157, 23, 35, 0.8) 49.72%, #9d1723 70.96%); }
    .color-selector__item--c8 {
      background-image: -webkit-linear-gradient(45deg, #6b5e4d 27.07%, rgba(107, 94, 77, 0.8) 49.72%, #6b5e4d 70.96%);
      background-image: -o-linear-gradient(45deg, #6b5e4d 27.07%, rgba(107, 94, 77, 0.8) 49.72%, #6b5e4d 70.96%);
      background-image: linear-gradient(45deg, #6b5e4d 27.07%, rgba(107, 94, 77, 0.8) 49.72%, #6b5e4d 70.96%); }
    .color-selector__item--c9 {
      background-image: -webkit-linear-gradient(45deg, #dbdbdb 27.07%, rgba(219, 219, 219, 0.8) 49.72%, #dbdbdb 70.96%);
      background-image: -o-linear-gradient(45deg, #dbdbdb 27.07%, rgba(219, 219, 219, 0.8) 49.72%, #dbdbdb 70.96%);
      background-image: linear-gradient(45deg, #dbdbdb 27.07%, rgba(219, 219, 219, 0.8) 49.72%, #dbdbdb 70.96%); }
    .color-selector__item--c10 {
      background-image: -webkit-linear-gradient(45deg, #2a221c 27.07%, rgba(42, 34, 28, 0.8) 49.72%, #2a221c 70.96%);
      background-image: -o-linear-gradient(45deg, #2a221c 27.07%, rgba(42, 34, 28, 0.8) 49.72%, #2a221c 70.96%);
      background-image: linear-gradient(45deg, #2a221c 27.07%, rgba(42, 34, 28, 0.8) 49.72%, #2a221c 70.96%); }
    .color-selector__item:hover, .color-selector__item--active {
      -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
      transform: scale(1.1); }
  .color-selector__item + .color-selector__item {
    margin-left: 20px; }

.color-choose-buttons {
  text-align: center;
  margin-top: 50px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }
  .color-choose-buttons .btn + .btn {
    margin-left: 50px; }

.car-card {
  position: relative;
  padding: 0 20px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }
  .car-card--big {
    margin-top: 67px;
    margin-bottom: 50px; }
  .car-card__img {
    width: 100%;
    height: auto; }
  .car-card__info {
    position: absolute;
    top: 60px;
    right: 0;
    background-color: #fff;
    width: 42%;
    padding: 30px 50px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25); }
  .car-card__heading {
    margin: 0;
    font-size: 24px;
    font-weight: bold;
    font-family: "Toyota Display";
    letter-spacing: .1em; }
  .car-card .text-simple {
    margin: 0; }
  .car-card__fuel {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
    .car-card__fuel .ico--fuel {
      padding: 15px; }
    .car-card__fuel p {
      margin: 0; }

.variant-table {
  margin-top: 50px; }

@media (max-width: 1023px) {
  .table {
    overflow: auto; } }

.table .filter-block__switch-label {
  width: auto;
  padding: 0;
  margin-bottom: 10px; }

.table input[type="checkbox"] + .checkbox-label::before {
  margin-right: 0; }

.table__group--hidden {
  display: none; }

.table img, .table svg {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.table__icon {
  color: #B5B7B3; }
  .table__icon svg path {
    fill: currentColor; }

.table__row-wrapper {
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }
  @media (max-width: 1023px) {
    .table__row-wrapper {
      min-width: 1200px; } }

.table__row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px; }
  @media screen and (max-width: 992px) {
    .table__row {
      padding-left: 15px;
      padding-right: 15px; } }
  @media (max-width: 1023px) {
    .table__row {
      min-width: 1200px; } }

.table__col {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 2 - 30px);
  min-height: 68px;
  box-sizing: border-box;
  padding: 10px 0;
  text-align: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }
  .table__col:first-of-type {
    width: calc(100% / 12 * 3 - 30px);
    text-align: left;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start; }
  .table__col--highlight {
    background-color: #1D71B8;
    background: -webkit-gradient(linear, left top, right top, from(#1D71B8), color-stop(25.41%, #0F82C9), color-stop(49.17%, #0094DB), color-stop(74.03%, #0F82C9), color-stop(99.45%, #1D71B8));
    background: -webkit-linear-gradient(left, #1D71B8 0%, #0F82C9 25.41%, #0094DB 49.17%, #0F82C9 74.03%, #1D71B8 99.45%);
    background: -o-linear-gradient(left, #1D71B8 0%, #0F82C9 25.41%, #0094DB 49.17%, #0F82C9 74.03%, #1D71B8 99.45%);
    background: linear-gradient(90deg, #1D71B8 0%, #0F82C9 25.41%, #0094DB 49.17%, #0F82C9 74.03%, #1D71B8 99.45%);
    -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
    box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }
    .table__col--highlight .link {
      color: #fff; }
    .table__col--highlight .table__icon {
      color: #fff; }

.table__link {
  color: #1D71B8;
  font-style: italic;
  font-size: 12px;
  text-decoration: none;
  margin: 7px 0; }
  .table__link:hover {
    text-decoration: underline; }

.table__text {
  font-style: italic;
  font-size: 14px;
  letter-spacing: .05em; }
  .table__text--small {
    font-size: 12px;
    margin: 7px 0; }
  .table__text--medium {
    font-size: 14px;
    margin: 7px 0;
    font-style: normal;
    letter-spacing: normal; }
  .table__text--strong {
    font-weight: bold; }
  .table__text--italic {
    font-style: italic;
    font-size: 14px; }
  .table__text--line {
    font-size: 12px;
    text-decoration: line-through;
    margin: 7px 0; }

.table__heading {
  font-weight: bold;
  font-size: 18px;
  letter-spacing: .05em; }

.table__car {
  position: relative;
  margin-top: 8px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: .6;
  -webkit-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s;
  will-change: opacity;
  margin-bottom: 40px; }
  .table__car img {
    max-width: 100%;
    width: 144px;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s; }
  .table__car span {
    position: absolute;
    left: 50%;
    top: 50%;
    color: #fff;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }
  .table__car--active {
    opacity: 1; }
    .table__car--active img {
      width: 170px; }

.table__price {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.table__price-part {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0 5px; }

.specs-table {
  margin-top: 50px; }

.specs-more {
  margin-top: 30px;
  color: #CC0033;
  text-decoration: none;
  font: "Toyota Display";
  font-size: 24px;
  font-weight: bold;
  letter-spacing: .1em; }
  .specs-more img {
    -webkit-transform: rotate(90deg);
    -ms-transform: rotate(90deg);
    transform: rotate(90deg);
    margin-left: 10px; }

.photo-grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  width: 100%;
  height: 32vw;
  margin-top: 50px;
  font-size: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }
  @media (max-width: 767px) {
    .photo-grid {
      display: none; } }
  .photo-grid__col {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-sizing: border-box;
    box-sizing: border-box; }
    .photo-grid__col--m {
      width: 56%; }
  .photo-grid__item {
    overflow: hidden;
    cursor: pointer; }
    .photo-grid__item:hover .photo-grid__img {
      -webkit-transform: scale(1.05);
      -ms-transform: scale(1.05);
      transform: scale(1.05); }
  .photo-grid__img {
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    -webkit-transition: all 1s;
    -o-transition: all 1s;
    transition: all 1s;
    will-change: transform; }

.photo-grid__col--s {
  width: 44%; }
  .photo-grid__col--s .photo-grid__item:nth-of-type(1) {
    width: 100%;
    height: 73%; }
  .photo-grid__col--s .photo-grid__item:nth-of-type(2), .photo-grid__col--s .photo-grid__item:nth-of-type(3) {
    width: 50%;
    height: 27%; }

.photo-grid__col--m {
  width: 56%; }
  .photo-grid__col--m .photo-grid__item {
    width: 50%;
    height: 50%; }

.docs {
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 200px;
  border: 1px solid #CBCDC9;
  -webkit-box-shadow: 0px 0px 62px rgba(77, 79, 83, 0.3);
  box-shadow: 0px 0px 62px rgba(77, 79, 83, 0.3); }
  @media screen and (max-width: 992px) {
    .docs {
      padding-left: 15px;
      padding-right: 15px; } }
  @media (max-width: 1023px) {
    .docs {
      -webkit-box-shadow: none;
      box-shadow: none;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      border: none; } }
  .docs .section-title {
    margin-top: 50px; }
  .docs__part {
    position: relative;
    width: 50%;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    padding: 20px;
    min-height: 100px; }
    @media (max-width: 1023px) {
      .docs__part {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        word-wrap: break-word;
        margin-left: 15px;
        margin-right: 15px;
        width: calc(100% / 12 * 10 - 30px); } }
    @media (max-width: 767px) {
      .docs__part {
        width: calc(100% / 12 * 12 - 30px); } }
    .docs__part:after {
      content: "";
      position: absolute;
      left: 20px;
      top: 20px;
      width: calc(100% - 40px);
      height: calc(100% - 40px);
      border: 1px solid #CBCDC9;
      border-radius: 3px;
      z-index: -1; }
      @media (max-width: 1023px) {
        .docs__part:after {
          display: none; } }
    .docs__part:first-of-type {
      border-right: 1px solid #CBCDC9;
      text-align: center; }
      @media (max-width: 1023px) {
        .docs__part:first-of-type {
          display: none; } }
  .docs__img {
    width: 83%;
    margin-bottom: 45px; }
  .docs__listing {
    padding: 115px 35px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box; }
  .docs__item {
    margin-bottom: 30px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
    .docs__item:last-of-type {
      margin-bottom: 0; }
  .docs__link {
    color: inherit;
    margin-right: 10px;
    margin-top: 0;
    margin-bottom: 0; }
    .docs__link--alt {
      font-style: italic; }
    .docs__link:last-of-type {
      margin-right: 0; }
  .docs .ico--pdf {
    margin-right: 18px; }

.video-wrapper {
  min-height: 1000px;
  padding: 70px 0;
  text-align: center; }
  @media (max-width: 1023px) {
    .video-wrapper {
      background-image: none;
      background-color: #fff;
      color: #23171A; } }
  @media (max-width: 1023px) {
    .video-wrapper {
      min-height: 0; } }
  .video-wrapper__subtitle {
    margin-top: 20px;
    text-align: center;
    font-size: 18px;
    font-weight: normal;
    font-family: "Toyota Display"; }
  .video-wrapper .btn {
    margin: 30px 0; }
  .video-wrapper iframe {
    max-width: 1290px;
    height: 720px;
    display: block;
    margin: 0 auto;
    border-radius: 5px; }
    @media (max-width: 1023px) {
      .video-wrapper iframe {
        display: none;
        max-width: 610px;
        height: 344px; } }
    @media (max-width: 767px) {
      .video-wrapper iframe {
        max-width: 298px;
        height: 168px; } }

.page-testdrive-head {
  background-image: url(../img/bg-testdrive-head.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.test-drive-card {
  padding: 140px 0 65px; }
  @media (max-width: 1023px) {
    .test-drive-card {
      padding: 0;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }
  .test-drive-card__description {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 7 - 30px);
    background: white;
    -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    color: #23171A;
    padding: 50px 35px 50px 110px;
    float: right;
    -webkit-transform: translateY(15%);
    -ms-transform: translateY(15%);
    transform: translateY(15%); }
    @media (max-width: 1023px) {
      .test-drive-card__description {
        padding: 60px 20px 50px;
        float: none;
        -webkit-transform: translateY(-11%);
        -ms-transform: translateY(-11%);
        transform: translateY(-11%);
        width: calc(100% / 12 * 11 - 30px); } }
    @media (max-width: 767px) {
      .test-drive-card__description {
        padding: 105px 10px 50px;
        width: calc(100% / 12 * 12);
        position: relative;
        margin: 0; } }
  .test-drive-card__image {
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px);
    height: 450px;
    position: absolute;
    z-index: 1; }
    @media (max-width: 1023px) {
      .test-drive-card__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 530px;
        position: relative; } }
    @media (max-width: 767px) {
      .test-drive-card__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 215px;
        position: relative; } }
    .test-drive-card__image img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }
  .test-drive-card__title {
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    letter-spacing: 0.1em;
    font-weight: bold;
    margin: 0; }
  .test-drive-card__info {
    padding-top: 30px;
    line-height: normal;
    font-size: 18px;
    margin: 0; }
  .test-drive-card_p {
    display: block;
    padding-top: 20px;
    margin: 0; }
  .test-drive-card__btn {
    margin-top: 30px;
    color: white; }

.test-drive-pace {
  margin-top: 60px;
  margin-bottom: 100px;
  position: relative; }
  @media (max-width: 1023px) {
    .test-drive-pace {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: reverse;
      -ms-flex-direction: column-reverse;
      flex-direction: column-reverse;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }
  @media (max-width: 767px) {
    .test-drive-pace {
      margin: 0; } }
  .test-drive-pace__description {
    background: white;
    -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    color: #23171A;
    padding: 70px 20px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 5 - 30px);
    position: absolute;
    -webkit-transform: translateY(35%);
    -ms-transform: translateY(35%);
    transform: translateY(35%);
    margin: 0;
    z-index: 1; }
    @media (max-width: 1023px) {
      .test-drive-pace__description {
        width: calc(100% / 12 * 11 - 30px);
        position: relative;
        -webkit-transform: translateY(-13%);
        -ms-transform: translateY(-13%);
        transform: translateY(-13%);
        z-index: 0; } }
    @media (max-width: 767px) {
      .test-drive-pace__description {
        width: 100%; } }
  .test-drive-pace__title {
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    letter-spacing: 0.1em;
    font-weight: bold;
    margin: 0; }
  .test-drive-pace__info {
    padding-top: 10px;
    line-height: normal;
    font-size: 18px;
    margin: 0; }
  .test-drive-pace__line {
    padding-top: 30px;
    line-height: normal;
    font-size: 18px;
    font-style: italic;
    margin: 0; }
    .test-drive-pace__line:before {
      width: 41px;
      height: 31px;
      display: inline-block;
      content: "";
      margin-right: 15px;
      vertical-align: middle; }
  .test-drive-pace__map {
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 8 - 30px);
    height: 600px;
    float: right;
    position: relative; }
    @media (max-width: 1023px) {
      .test-drive-pace__map {
        width: calc(100% / 12 * 10 - 30px);
        float: none;
        height: 440px; } }
    @media (max-width: 767px) {
      .test-drive-pace__map {
        width: calc(100% / 12 * 12 - 30px);
        height: 215px; } }
    .test-drive-pace__map img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }

.page-testdrive-video {
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  margin-bottom: 200px; }
  @media (max-width: 1023px) {
    .page-testdrive-video {
      margin-top: 70px;
      margin-bottom: 100px; } }

.test-drive-bigslider__item iframe {
  -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
  box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
  border-radius: 10px;
  max-width: 1290px;
  height: 720px;
  display: block;
  margin: 0 auto;
  border-radius: 5px; }
  @media (max-width: 1023px) {
    .test-drive-bigslider__item iframe {
      height: 345px;
      width: calc(100% / 12 * 10 - 30px);
      margin-left: calc(100% / 12 * 1 + 15px);
      margin: 50px auto; } }
  @media (max-width: 767px) {
    .test-drive-bigslider__item iframe {
      height: 170px;
      width: calc(100% / 12 * 12 - 30px);
      margin-left: calc(100% / 12 * 0 + 15px); } }

.page-testdrive-video {
  padding: 45px 0; }

.test-drive-slider {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  margin-top: 40px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }
  @media (max-width: 1023px) {
    .test-drive-slider {
      display: none; } }
  .test-drive-slider__nav {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 1 - 30px); }
    .test-drive-slider__nav-left {
      text-align: right; }
  .test-drive-slider__list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    width: calc(100% / 12 * 10 - 30px); }
  .test-drive-slider__item {
    width: calc(100% / 12 * 4 - 30px); }
    .test-drive-slider__item iframe {
      -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
      box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
      border-radius: 10px;
      max-width: 1290px;
      height: 200px;
      display: block;
      margin: 0 auto;
      border-radius: 5px; }

.test-drive-slider .slick-current {
  -webkit-transform: scale(1.2);
  -ms-transform: scale(1.2);
  transform: scale(1.2); }

.test-drive-slider .slick-track {
  padding: 25px 0 !important; }

.test-drive-terms {
  padding: 200px 0; }
  @media (max-width: 767px) {
    .test-drive-terms {
      padding: 50px 0 100px; } }
  .test-drive-terms__title {
    padding-bottom: 10px;
    margin: 0; }
  .test-drive-terms__subtitle {
    margin-bottom: 20px; }
  .test-drive-terms__description {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 10 - 30px);
    margin: 0 auto; }
    @media (max-width: 767px) {
      .test-drive-terms__description {
        width: 100%;
        margin: 0; } }
    .test-drive-terms__description-item {
      float: left;
      width: calc(100% / 12 * 6 - 30px);
      margin: 0;
      padding-left: 15px;
      padding-right: 15px;
      padding-top: 30px; }
      @media (max-width: 1023px) {
        .test-drive-terms__description-item {
          width: calc(100% / 12 * 12 - 30px); } }

.test-drive-form {
  padding: 70px 0; }
  .test-drive-form__title {
    padding-bottom: 10px;
    margin: 0; }
  .test-drive-form__fields {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin-left: calc(100% / 12 * 4 + 15px); }
    @media (max-width: 1023px) {
      .test-drive-form__fields {
        width: calc(100% / 12 * 10 - 30px);
        margin-left: calc(100% / 12 * 1 + 15px); } }
    @media (max-width: 767px) {
      .test-drive-form__fields {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .test-drive-form__textfield {
    width: 100%;
    margin: 30px 0 0; }
    @media (max-width: 1023px) {
      .test-drive-form__textfield {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
    @media (max-width: 767px) {
      .test-drive-form__textfield {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .test-drive-form__subtitle {
    margin-bottom: 20px; }
  .test-drive-form__car {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 10 - 30px);
    margin: 0 auto; }
  .test-drive-form__car-item {
    text-align: center;
    float: left;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px);
    padding-left: 15px;
    padding-right: 15px;
    padding-top: 20px; }
    @media (max-width: 1023px) {
      .test-drive-form__car-item {
        display: none; } }
    .test-drive-form__car-item-img {
      width: 100%; }
    .test-drive-form__car-item-title {
      font-family: "Toyota Display";
      line-height: normal;
      font-size: 18px;
      letter-spacing: 0.1em;
      font-weight: bold; }
  .test-drive-form__input {
    margin: 30px auto 0;
    display: block;
    width: 30%; }
  .test-drive-form__submit {
    margin: 30px auto 0;
    display: block; }
  .test-drive-form__clear {
    cursor: pointer;
    width: 10%;
    margin: 10px auto 0;
    font-style: italic;
    font-weight: 300;
    line-height: normal;
    font-size: 14px;
    text-align: center;
    letter-spacing: 0.1em;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline; }
    @media (max-width: 767px) {
      .test-drive-form__clear {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }

.page-testdrive-form {
  padding-bottom: 0; }

.testdrive-bages {
  padding: 100px 0 60px;
  text-align: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  @media (max-width: 1023px) {
    .testdrive-bages {
      display: none; } }
  .testdrive-bages__li {
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    letter-spacing: 0.1em;
    font-weight: bold;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px); }
  .testdrive-bages__forest {
    margin-left: calc(100% / 12 * 2 + 15px); }
  .testdrive-bages__city {
    margin-left: calc(100% / 12 * 1 + 15px); }
  .testdrive-bages__track {
    margin-left: calc(100% / 12 * 1 + 15px); }

.page-comparison-head {
  min-height: 210px;
  color: #23171A;
  padding-bottom: 0; }
  .page-comparison-head .breadcrumbs {
    padding-top: 70px; }
    .page-comparison-head .breadcrumbs__item:not(:first-child)::before {
      background: #23171A; }

.page-comparison-models {
  padding-bottom: 40px; }

.chosen-models {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px; }
  .chosen-models__model {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px);
    text-align: center; }
  .chosen-models__car {
    min-height: 185px; }
  .chosen-models__img {
    width: 100%; }
  .chosen-models__select-label {
    padding: 30px 0 10px;
    font-size: 14px;
    font-style: italic;
    text-align: left; }

.selected-text {
  color: #B5B7B3; }

.model-first {
  margin-left: calc(100% / 12 * 3 + 15px); }

@media (max-width: 767px) {
  .table {
    overflow-x: scroll; } }

.table__thead-wrapper {
  padding: 25px 0;
  background: #FFFFFF;
  border: 1px solid #CBCDC9;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  font-style: italic; }

.table__tr {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  font-size: 14px; }
  @media screen and (max-width: 992px) {
    .table__tr {
      padding-left: 15px;
      padding-right: 15px; } }

.table__tr-wrapper {
  padding: 15px 0;
  border-bottom: solid 1px rgba(203, 205, 201, 0.4); }
  @media (max-width: 767px) {
    .table__tr-wrapper {
      min-width: 768px; } }

.table__td {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 3 - 30px);
  font-size: 14px; }
  .table__td:not(:first-child) {
    text-align: center; }

.table__title {
  font-size: 18px;
  font-weight: bold;
  font-style: normal; }

.page-tradein-head {
  background: url(../img/bg-tradein.jpg), -webkit-gradient(linear, left top, left bottom, from(#FFFFFF), to(rgba(255, 255, 255, 0)));
  background: url(../img/bg-tradein.jpg), -webkit-linear-gradient(top, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%);
  background: url(../img/bg-tradein.jpg), -o-linear-gradient(top, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%);
  background: url(../img/bg-tradein.jpg), linear-gradient(180deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.page-tradein-content {
  padding-bottom: 200px; }

.tradein-available-marks {
  margin-top: 70px; }
  .tradein-available-marks__text {
    font-family: "Toyota Display";
    font-size: 24px;
    letter-spacing: 0.1em;
    font-weight: bold;
    display: inline-block; }
    @media (max-width: 1023px) {
      .tradein-available-marks__text {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        word-wrap: break-word;
        margin-left: 15px;
        margin-right: 15px;
        width: calc(100% / 12 * 12 - 30px);
        display: block;
        margin-bottom: 40px; } }
  .tradein-available-marks__tag {
    display: inline-block;
    margin: 0 0 0 20px; }
    @media (max-width: 767px) {
      .tradein-available-marks__tag {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        word-wrap: break-word;
        margin-left: 15px;
        margin-right: 15px;
        margin-bottom: 40px; } }

.tradein-card {
  margin-top: 70px; }
  .tradein-card__description {
    -webkit-transform: translateY(4%);
    -ms-transform: translateY(4%);
    transform: translateY(4%); }
    @media (max-width: 1023px) {
      .tradein-card__description {
        -webkit-transform: none;
        -ms-transform: none;
        transform: none;
        margin: 0; } }
    @media (max-width: 767px) {
      .tradein-card__description {
        -webkit-transform: translateY(-6%);
        -ms-transform: translateY(-6%);
        transform: translateY(-6%); } }
  .tradein-card__title {
    margin: 0; }
  .tradein-card__line {
    padding-top: 5px; }
  .tradein-card__ico {
    display: inline-block;
    padding-right: 30px; }

.page-tradein-bottom {
  padding: 70px 0;
  text-align: center; }

.tradein-form {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 12 - 30px);
  margin: 0 auto; }
  .tradein-form__engine {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px);
    margin: 50px 15px 15px; }
    @media (max-width: 1023px) {
      .tradein-form__engine {
        width: calc(100% / 12 * 3 - 30px); } }
    @media (max-width: 767px) {
      .tradein-form__engine {
        margin-top: 10px;
        width: calc(100% / 12 * 12 - 30px); } }
  .tradein-form__year {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px);
    margin: 50px 15px 15px; }
    @media (max-width: 1023px) {
      .tradein-form__year {
        width: calc(100% / 12 * 4 - 30px); } }
    @media (max-width: 767px) {
      .tradein-form__year {
        margin-top: 10px;
        width: calc(100% / 12 * 12 - 30px); } }
  .tradein-form__prob {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px);
    margin: 50px 15px 15px; }
    @media (max-width: 1023px) {
      .tradein-form__prob {
        width: calc(100% / 12 * 4 - 30px); } }
    @media (max-width: 767px) {
      .tradein-form__prob {
        margin-top: 10px;
        width: calc(100% / 12 * 12 - 30px); } }
  .tradein-form__mark {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px);
    margin: 50px 15px 15px; }
    @media (max-width: 1023px) {
      .tradein-form__mark {
        width: calc(100% / 12 * 3 - 30px); } }
    @media (max-width: 767px) {
      .tradein-form__mark {
        margin-top: 30px;
        width: calc(100% / 12 * 12 - 30px); } }
  .tradein-form__name {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px);
    margin: 50px 15px 15px; }
    @media (max-width: 767px) {
      .tradein-form__name {
        margin-top: 10px;
        width: calc(100% / 12 * 12 - 30px); } }
  .tradein-form__tel {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin: 50px 15px 15px; }
    @media (max-width: 767px) {
      .tradein-form__tel {
        margin-top: 10px;
        width: calc(100% / 12 * 12 - 30px); } }
  .tradein-form__submit {
    display: block;
    margin: 15px auto 0; }

.page-corporate-head {
  background-image: url(../img/bg-corporate-head.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.corporate-card {
  padding: 265px 0 0; }
  @media (max-width: 1023px) {
    .corporate-card {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      padding-bottom: 0;
      padding-top: 100px; } }
  .corporate-card__description {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 7 - 30px);
    background: white;
    -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    color: #23171A;
    padding: 50px 35px 50px 110px;
    float: right;
    -webkit-transform: translateY(15%);
    -ms-transform: translateY(15%);
    transform: translateY(15%); }
    @media (max-width: 1023px) {
      .corporate-card__description {
        padding: 75px 20px;
        float: none;
        -webkit-transform: translateY(-11%);
        -ms-transform: translateY(-11%);
        transform: translateY(-11%);
        width: calc(100% / 12 * 11 - 30px); } }
    @media (max-width: 767px) {
      .corporate-card__description {
        padding: 105px 10px 50px;
        width: calc(100% / 12 * 12);
        position: relative;
        margin: 0; } }
  .corporate-card__image {
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px);
    position: absolute;
    z-index: 1;
    height: 450px; }
    @media (max-width: 1023px) {
      .corporate-card__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 530px;
        position: relative; } }
    @media (max-width: 767px) {
      .corporate-card__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 215px;
        position: relative; } }
    .corporate-card__image img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }
  .corporate-card__title {
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    letter-spacing: 0.1em;
    font-weight: bold;
    margin: 0; }
  .corporate-card__info {
    padding-top: 20px;
    line-height: normal;
    font-size: 18px;
    margin: 0; }
  .corporate-card_p {
    display: block;
    padding-top: 20px;
    margin: 0; }
  .corporate-card__btn {
    margin-top: 30px;
    color: white; }

.corporate-title-card {
  padding: 100px 0 0; }
  @media (max-width: 1023px) {
    .corporate-title-card {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }
  .corporate-title-card__description {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 7 - 30px);
    -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    color: #23171A;
    padding: 70px 217px 75px 20px;
    position: absolute;
    z-index: 1;
    -webkit-transform: translateY(9%);
    -ms-transform: translateY(9%);
    transform: translateY(9%);
    margin: 0; }
    @media (max-width: 1023px) {
      .corporate-title-card__description {
        width: calc(100% / 12 * 11 - 30px);
        position: relative;
        -webkit-transform: none;
        -ms-transform: none;
        transform: none;
        padding: 20px 20px 50px; } }
    @media (max-width: 767px) {
      .corporate-title-card__description {
        width: calc(100% / 12 * 12);
        position: relative;
        -webkit-transform: translateY(-6%);
        -ms-transform: translateY(-6%);
        transform: translateY(-6%);
        padding: 50px 10px 50px;
        z-index: 0; } }
  .corporate-title-card__image {
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 7 - 30px);
    max-height: 420px;
    height: 420px;
    float: right;
    z-index: 2;
    position: relative; }
    @media (max-width: 1023px) {
      .corporate-title-card__image {
        width: calc(100% / 12 * 12 - 30px);
        float: none;
        height: 520px; } }
    @media (max-width: 767px) {
      .corporate-title-card__image {
        width: calc(100% / 12 * 12 - 30px);
        float: none;
        height: 215px; } }
    .corporate-title-card__image img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }
  .corporate-title-card__info {
    padding-top: 30px;
    margin: 0; }
  .corporate-title-card__p {
    display: block;
    padding-top: 20px;
    margin: 0; }
  .corporate-title-card__title {
    margin: 0;
    font-family: "Toyota Display";
    font-size: 24px;
    letter-spacing: 0.1em;
    color: #23171A;
    font-weight: bold; }
  .corporate-title-card__btn {
    margin-top: 30px; }

@media (max-width: 1023px) {
  .card-big {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; } }

.card-big__description {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  background: white;
  -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
  box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
  border-radius: 2px;
  color: #23171A; }
  .card-big__description-right {
    width: calc(100% / 12 * 8.5 - 30px);
    padding: 70px 30px 70px 150px;
    float: right;
    -webkit-transform: translateY(5%);
    -ms-transform: translateY(5%);
    transform: translateY(5%);
    background: url(../img/bg-toyota-big-2.svg) no-repeat bottom left white; }
    @media (max-width: 1023px) {
      .card-big__description-right {
        padding: 75px 20px 40px;
        float: none;
        -webkit-transform: translateY(-6%);
        -ms-transform: translateY(-6%);
        transform: translateY(-6%);
        width: calc(100% / 12 * 11 - 30px); } }
    @media (max-width: 767px) {
      .card-big__description-right {
        padding: 105px 10px 50px;
        width: calc(100% / 12 * 12);
        margin: 0; } }
  .card-big__description-left {
    width: calc(100% / 12 * 7.5 - 30px);
    padding: 70px 125px 70px 30px;
    background: url(../img/bg-toyota-big-3.svg) no-repeat bottom right white; }

.card-big__title {
  text-align: left;
  margin: 0; }
  .card-big__title:before {
    margin: 0 0 10px; }

.card-big__image {
  -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
  box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
  border-radius: 5px;
  overflow: hidden;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  z-index: 1; }
  @media (max-width: 1023px) {
    .card-big__image {
      border-radius: 2px; } }
  .card-big__image-right {
    -webkit-transform: translateX(-28%);
    -ms-transform: translateX(-28%);
    transform: translateX(-28%);
    position: absolute;
    width: calc(100% / 12 * 6.6 - 30px);
    height: 490px;
    max-width: calc(100% / 12 * 6.6 - 30px); }
    @media (max-width: 1023px) {
      .card-big__image-right {
        width: calc(100% / 12 * 12 - 30px);
        max-width: 100%;
        height: 530px;
        position: relative;
        -webkit-transform: none;
        -ms-transform: none;
        transform: none; } }
    @media (max-width: 767px) {
      .card-big__image-right {
        width: calc(100% / 12 * 12 - 30px);
        height: 215px; } }
  .card-big__image-left {
    position: absolute;
    -webkit-transform: translateX(84%) translateY(32%);
    -ms-transform: translateX(84%) translateY(32%);
    transform: translateX(84%) translateY(32%);
    width: calc(100% / 12 * 7.6 - 30px);
    max-height: 580px;
    height: 570px;
    max-width: calc(100% / 12 * 7.6 - 30px); }
  .card-big__image img {
    width: 100%;
    width: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%; }

.card-big__info {
  padding-top: 12px;
  line-height: normal;
  font-size: 18px;
  margin: 0; }
  .card-big__info-left {
    padding-left: 0;
    padding-right: 35px; }
  .card-big__info-right {
    padding-left: 25px; }

.card-big__p {
  margin: 0; }

.card-big__ol {
  padding-left: 20px; }

.corporate-service-card {
  padding-top: 325px; }
  @media (max-width: 1023px) {
    .corporate-service-card {
      display: none; } }

.corporate-lising-card {
  padding-top: 200px; }
  @media (max-width: 1023px) {
    .corporate-lising-card {
      display: none; } }

.page-corporate-models {
  padding-bottom: 325px; }
  @media (max-width: 1023px) {
    .page-corporate-models {
      padding-bottom: 125px; } }

.manager-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  text-align: center;
  padding-top: 50px; }

@media (max-width: 1023px) {
  .page-corporate-managers {
    padding-bottom: 0; } }

.manager-card {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 4 - 30px); }
  @media (max-width: 1023px) {
    .manager-card {
      width: calc(100% / 12 * 6 - 30px);
      margin-bottom: 50px; } }
  @media (max-width: 767px) {
    .manager-card {
      width: calc(100% / 12 * 12 - 30px);
      margin-bottom: 50px; } }
  .manager-card__name {
    padding-top: 20px;
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    letter-spacing: 0.1em;
    font-weight: bold; }
  .manager-card__status {
    margin-bottom: 10px; }
  .manager-card__phone {
    display: block;
    padding-bottom: 20px;
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 18px;
    letter-spacing: 0.1em;
    font-weight: bold;
    color: inherit;
    text-decoration: none; }
  .manager-card__images {
    position: relative;
    width: 300px;
    height: 300px;
    margin: 0 auto; }
    .manager-card__images img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }

.page-service-head {
  color: white;
  background-image: url(../img/bg-service-head.jpg);
  background-repeat: no-repeat;
  background-position: top;
  background-size: cover;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.service-info {
  padding: 100px 0 200px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 8 - 30px);
  margin-left: calc(100% / 12 * 2 + 15px); }
  @media (max-width: 1023px) {
    .service-info {
      width: calc(100% / 12 * 12 - 30px);
      margin-left: calc(100% / 12 * 0 + 15px);
      padding: 100px 0 100px; } }
  .service-info__subtitle {
    margin-bottom: 30px; }
  .service-info__logo {
    float: left;
    margin: 0 20px 0 0; }
    @media (max-width: 767px) {
      .service-info__logo {
        float: none; }
        .service-info__logo img {
          margin: 0 auto;
          display: block; } }
  .service-info__description-list {
    padding: 20px 0 0 20px; }

.service-card {
  margin-bottom: 200px;
  margin-top: 100px; }
  @media (max-width: 1023px) {
    .service-card {
      margin-bottom: 100px; } }
  @media (max-width: 1023px) {
    .service-card__title {
      text-align: center; }
      .service-card__title:before {
        content: none; } }
  @media (max-width: 767px) {
    .service-card__title {
      text-align: left; } }
  @media (max-width: 1023px) {
    .service-card__image-right {
      width: calc(100% / 12 * 12 - 30px);
      float: none;
      height: 520px; } }
  @media (max-width: 767px) {
    .service-card__image-right {
      width: calc(100% / 12 * 12 - 30px);
      float: none;
      height: 215px; } }
  @media (max-width: 1023px) {
    .service-card__image-left {
      width: calc(100% / 12 * 12 - 30px);
      position: relative;
      -webkit-transform: translateY(5%);
      -ms-transform: translateY(5%);
      transform: translateY(5%);
      max-width: 100%;
      height: 520px; } }
  @media (max-width: 767px) {
    .service-card__image-left {
      height: 215px;
      -webkit-transform: translateY(0%);
      -ms-transform: translateY(0%);
      transform: translateY(0%); } }
  .service-card__description {
    background: none; }
    .service-card__description-left {
      background: url(../img/bg-toyota-big-3.svg) no-repeat bottom right white; }
      @media (max-width: 1023px) {
        .service-card__description-left {
          margin: 0;
          width: 100%; } }
      @media (max-width: 767px) {
        .service-card__description-left {
          padding: 30px 10px 50px 10px; } }
    @media (max-width: 767px) {
      .service-card__description-right {
        padding: 90px 10px 0px 10px; } }
  .service-card__right {
    padding-left: 0; }
    @media (max-width: 1023px) {
      .service-card__right {
        width: calc(100% / 12 * 11 - 30px);
        position: relative;
        -webkit-transform: none;
        -ms-transform: none;
        transform: none;
        padding: 20px 20px 50px; } }
    @media (max-width: 767px) {
      .service-card__right {
        width: calc(100% / 12 * 12);
        position: relative;
        -webkit-transform: translateY(-6%);
        -ms-transform: translateY(-6%);
        transform: translateY(-6%);
        padding: 50px 10px 0px;
        z-index: 0; } }
  .service-card__btn {
    margin-top: 20px;
    margin-right: 30px;
    text-align: center; }

.service-terms {
  margin-top: 325px; }
  @media (max-width: 1023px) {
    .service-terms {
      margin-top: 125px; } }
  .service-terms__bold {
    font-weight: bold; }
  .service-terms__title {
    margin-bottom: 10px; }
  .service-terms__subtitle {
    width: calc(100% / 12 * 7 - 30px);
    margin-left: calc(100% / 12 * 2.5 + 15px);
    font-size: 18px;
    margin-bottom: 30px; }
    @media (max-width: 1023px) {
      .service-terms__subtitle {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  @media (max-width: 1023px) {
    .service-terms__wraper {
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      word-wrap: break-word;
      margin-left: 15px;
      margin-right: 15px;
      width: calc(100% / 12 * 12 - 30px); } }
  @media (max-width: 767px) {
    .service-terms__wraper {
      width: 100%;
      margin: 0; } }
  .service-terms__item {
    background: #FFFFFF;
    border: 1px solid #CBCDC9;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.3);
    box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.3);
    margin-bottom: 20px;
    cursor: pointer; }
    .service-terms__item-head {
      padding: 22px 0 22px 20px; }
      .service-terms__item-head:after {
        display: inline-block;
        content: "";
        width: 12px;
        height: 6px;
        position: absolute;
        right: 30px;
        margin-top: 5px;
        background: url(../img/i-nav-arrow.svg) center no-repeat;
        vertical-align: middle;
        background-size: cover;
        -webkit-transition: all .2s;
        -o-transition: all .2s;
        transition: all .2s; }
        @media (max-width: 767px) {
          .service-terms__item-head:after {
            right: 15px;
            margin-top: 10px; } }
      .service-terms__item-head-text {
        font-size: 18px;
        letter-spacing: 0.05em;
        color: #23171A;
        font-weight: bold;
        display: inline-block; }
        @media (max-width: 1023px) {
          .service-terms__item-head-text {
            width: 90%; } }
    .service-terms__item-content {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex; }
    .service-terms__item-container {
      display: none; }
      .service-terms__item-container ul {
        padding-left: 20px; }
      .service-terms__item-container-text {
        width: calc(100% / 12 * 8);
        padding: 0 0 22px 20px; }
        @media (max-width: 1023px) {
          .service-terms__item-container-text {
            width: calc(100% / 12 * 10); } }
        @media (max-width: 767px) {
          .service-terms__item-container-text {
            width: calc(100% / 12 * 12); } }
      .service-terms__item-container-img {
        width: calc(100% / 12 * 4); }
        @media (max-width: 1023px) {
          .service-terms__item-container-img {
            display: none; } }

.is-opened .service-terms__item-head:after {
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg); }

.service-save {
  margin: 200px 0; }
  @media (max-width: 1023px) {
    .service-save {
      margin: 100px 0; } }
  .service-save__wraper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    margin: 0; }
  .service-save__col {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    margin: 0; }
    .service-save__col-left {
      width: calc(100% / 12 * 3 - 30px);
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between; }
      @media (max-width: 1023px) {
        .service-save__col-left {
          width: 100%;
          -webkit-box-ordinal-group: 3;
          -ms-flex-order: 2;
          order: 2;
          -webkit-box-orient: horizontal;
          -webkit-box-direction: normal;
          -ms-flex-direction: row;
          flex-direction: row;
          -ms-flex-pack: distribute;
          justify-content: space-around;
          margin-top: 10px; } }
      @media (max-width: 767px) {
        .service-save__col-left {
          display: none; } }
      .service-save__col-left-img {
        height: 247px;
        position: relative; }
        @media (max-width: 1023px) {
          .service-save__col-left-img {
            width: calc(100% / 12 * 6 - 30px); } }
        .service-save__col-left-img img {
          width: 100%;
          -o-object-fit: cover;
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
          height: 100%;
          -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
          box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
          border-radius: 5px; }
    .service-save__col-right {
      width: calc(100% / 12 * 3 - 30px);
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-pack: justify;
      -ms-flex-pack: justify;
      justify-content: space-between; }
      @media (max-width: 1023px) {
        .service-save__col-right {
          display: none; } }
      .service-save__col-right-img {
        height: 247px;
        position: relative; }
        .service-save__col-right-img img {
          width: 100%;
          -o-object-fit: cover;
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
          height: 100%;
          -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
          box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
          border-radius: 5px; }
    .service-save__col-mid {
      width: calc(100% / 12 * 6 - 30px); }
      @media (max-width: 1023px) {
        .service-save__col-mid {
          width: calc(100% / 12 * 10 - 30px);
          margin-left: calc(100% / 12 * 1 + 15px);
          -webkit-box-ordinal-group: 2;
          -ms-flex-order: 1;
          order: 1; } }
      @media (max-width: 767px) {
        .service-save__col-mid {
          width: calc(100% / 12 * 12 - 30px);
          margin-left: calc(100% / 12 * 0 + 15px); } }

.page-assistance-type {
  position: relative;
  padding: 150px 0;
  margin-bottom: 0;
  background: url(../img/bg-assistance-type.jpg);
  background-position: left center;
  background-size: cover;
  color: white; }
  .page-assistance-type:after {
    content: "";
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    width: 62.5%;
    opacity: .8;
    background: -webkit-linear-gradient(179.74deg, #23171A 20.93%, rgba(35, 23, 26, 0.4566) 83.16%, rgba(35, 23, 26, 0) 99.68%);
    background: -o-linear-gradient(179.74deg, #23171A 20.93%, rgba(35, 23, 26, 0.4566) 83.16%, rgba(35, 23, 26, 0) 99.68%);
    background: linear-gradient(270.26deg, #23171A 20.93%, rgba(35, 23, 26, 0.4566) 83.16%, rgba(35, 23, 26, 0) 99.68%);
    z-index: 0; }
    @media (max-width: 1023px) {
      .page-assistance-type:after {
        width: 100%;
        background: none;
        background-color: rgba(35, 23, 26, 0.4566); } }
  @media (max-width: 767px) {
    .page-assistance-type {
      padding: 50px 0 35px; } }

.wrapper, .car-card--big {
  position: relative;
  z-index: 1; }

.page-assistance-intravel {
  background: url(../img/bg-accessories-intravel.jpg);
  background-position: left center;
  background-size: cover;
  padding: 150px 0;
  color: white;
  margin-bottom: 0; }
  @media (max-width: 767px) {
    .page-assistance-intravel {
      padding: 50px 0 35px; } }

.assistance-card {
  margin: 200px 0; }
  @media (max-width: 1023px) {
    .assistance-card {
      margin: 100px 0; } }
  @media (max-width: 1023px) {
    .assistance-card__description {
      width: 100%; } }
  @media (max-width: 1023px) {
    .assistance-card__title {
      text-align: center; }
      .assistance-card__title::before {
        content: none; } }

.assistance-corp-grid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px; }
  @media screen and (max-width: 992px) {
    .assistance-corp-grid {
      padding-left: 15px;
      padding-right: 15px; } }
  .assistance-corp-grid__col {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px); }
    @media (max-width: 1023px) {
      .assistance-corp-grid__col {
        width: calc(100% / 12 * 10 - 30px);
        margin-left: calc(100% / 12 * 1 + 15px); } }
    @media (max-width: 767px) {
      .assistance-corp-grid__col {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px);
        margin-left: 0;
        margin-right: 0;
        width: 100%; } }
  .assistance-corp-grid__sub {
    font-style: italic; }
  .assistance-corp-grid__ul {
    padding: 0; }
  .assistance-corp-grid__li {
    margin-left: 20px; }
    @media (max-width: 1023px) {
      .assistance-corp-grid__li {
        list-style: none;
        margin: 1em 0; } }
  .assistance-corp-grid__b {
    font-weight: 700; }

.page-loyalty-head {
  background-image: url(../img/bg-loyalty-head.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.card-big__p span {
  display: block; }

.loyalty-about-card {
  padding-top: 100px; }
  .loyalty-about-card__title {
    text-align: left; }
    @media (max-width: 1023px) {
      .loyalty-about-card__title {
        text-align: center; } }
    .loyalty-about-card__title:before {
      margin: 0 0 10px; }
      @media (max-width: 1023px) {
        .loyalty-about-card__title:before {
          display: none; } }
  .loyalty-about-card__description {
    -webkit-box-shadow: none;
    box-shadow: none; }
    @media (max-width: 1023px) {
      .loyalty-about-card__description {
        width: 100%;
        padding: 25px 20px 40px;
        -webkit-transform: none;
        -ms-transform: none;
        transform: none; } }
  @media (max-width: 767px) {
    .loyalty-about-card__image {
      height: 215px; } }

.loyalty-terms-card {
  padding-top: 200px; }
  @media (max-width: 1023px) {
    .loyalty-terms-card {
      padding-top: 100px; } }
  .loyalty-terms-card__title {
    text-align: left; }
    @media (max-width: 1023px) {
      .loyalty-terms-card__title {
        text-align: center; } }
    .loyalty-terms-card__title:before {
      margin: 0 0 10px; }
      @media (max-width: 1023px) {
        .loyalty-terms-card__title:before {
          display: none; } }
  .loyalty-terms-card__description {
    -webkit-box-shadow: none;
    box-shadow: none; }
    @media (max-width: 1023px) {
      .loyalty-terms-card__description {
        width: 100%;
        padding: 25px 20px 40px; } }
  @media (max-width: 1023px) {
    .loyalty-terms-card__image {
      position: relative;
      -webkit-transform: none;
      -ms-transform: none;
      transform: none;
      max-width: 100%;
      width: calc(100% / 12 * 12 - 30px); } }
  @media (max-width: 767px) {
    .loyalty-terms-card__image {
      height: 215px; } }

.page-loyalty-types {
  padding-top: 200px;
  padding-bottom: 150px; }
  @media (max-width: 1023px) {
    .page-loyalty-types {
      padding-top: 0px; } }

.loyalty-types__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px; }

.loyalty-types__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  margin-bottom: 50px; }
  @media (max-width: 1023px) {
    .loyalty-types__item {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }

.loyalty-types__image {
  width: calc(100% / 12 * 5 - 30px);
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  position: relative;
  height: 380px; }
  @media (max-width: 1023px) {
    .loyalty-types__image {
      width: calc(100% / 12 * 12 - 30px); } }
  @media (max-width: 767px) {
    .loyalty-types__image {
      height: 215px; } }
  .loyalty-types__image img {
    width: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    z-index: 0; }

.loyalty-types__title {
  position: relative;
  font-size: 24px;
  text-align: center;
  letter-spacing: 0.1em;
  color: #fff;
  z-index: 1;
  display: block;
  top: 85%; }
  @media (max-width: 767px) {
    .loyalty-types__title {
      top: 65%;
      width: 85%;
      margin: 0 auto; } }

.loyalty-types__descr {
  width: calc(100% / 12 * 6.5 - 30px);
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  position: relative; }
  @media (max-width: 1023px) {
    .loyalty-types__descr {
      margin-top: 20px;
      width: calc(100% / 12 * 10 - 30px); } }
  .loyalty-types__descr p {
    margin-top: 0; }

.page-repair-head {
  background-image: url(../img/bg-repair-head.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.repair-card {
  padding: 100px 0 0; }
  .repair-card__description {
    background: none; }
  .repair-card__btn {
    margin-top: 20px;
    margin-right: 30px;
    text-align: center; }
    @media (max-width: 1023px) {
      .repair-card__btn {
        width: calc(100% / 12 * 6 - 30px);
        float: left; } }
    @media (max-width: 767px) {
      .repair-card__btn {
        width: 100%; } }
  .repair-card__text {
    padding-left: 0; }

.page-service-c-head {
  background-image: url(../img/bg-service-c-head.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.page-service-c {
  padding-bottom: 150px; }
  @media (max-width: 1023px) {
    .page-service-c {
      padding-bottom: 0px; } }

.service-c-card {
  padding: 100px 0 0; }
  .service-c-card__description {
    background: none; }
  .service-c-card__btn {
    margin-top: 20px;
    margin-right: 40px; }
    @media (max-width: 767px) {
      .service-c-card__btn {
        margin-right: 0px; } }
  .service-c-card__text {
    padding-left: 0; }

.service-c-photo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0; }
  @media (max-width: 767px) {
    .service-c-photo {
      margin-right: -15px;
      margin-left: -15px; } }
  .service-c-photo__item {
    width: calc(100% / 12 * 4 - 15px);
    position: relative;
    height: 375px; }
    @media (max-width: 1023px) {
      .service-c-photo__item {
        height: 180px; } }
    @media (max-width: 767px) {
      .service-c-photo__item {
        width: calc(100% / 12 * 12 - 15px);
        height: 235px;
        margin-bottom: 20px; } }
    .service-c-photo__item img {
      bottom: 0;
      right: 0;
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }

.page-parts-head {
  color: white;
  background-image: url(../img/bg-parts-head.jpg);
  background-repeat: no-repeat;
  background-position: top;
  background-size: cover;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.parts-order {
  padding: 100px 0 50px; }
  .parts-order__subtitle {
    margin: 20px 0;
    color: #1D71B8; }
  .parts-order__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px; }
  .parts-order__input {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .parts-order__input {
        width: calc(100% / 12 * 8 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
    @media (max-width: 767px) {
      .parts-order__input {
        width: calc(100% / 12 * 12 - 30px);
        margin-bottom: 20px; } }
  .parts-order__submit {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px); }
    @media (max-width: 1023px) {
      .parts-order__submit {
        width: calc(100% / 12 * 4 - 30px); } }
    @media (max-width: 767px) {
      .parts-order__submit {
        width: calc(100% / 12 * 12 - 30px); } }

.price__td {
  font-style: italic;
  font-size: 18px; }

.parts-table__thead-wrapper {
  padding: 23px 0;
  margin-bottom: 15px; }
  @media (max-width: 767px) {
    .parts-table__thead-wrapper {
      display: none; } }

.parts-table__tr-wrapper {
  border: none;
  padding: 15px 0 0;
  min-width: 100%; }
  @media (max-width: 767px) {
    .parts-table__tr-wrapper {
      border-top: solid 1px rgba(203, 205, 201, 0.2);
      border-bottom: solid 1px rgba(203, 205, 201, 0.2); } }

@media (max-width: 767px) {
  .parts-table__tr {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-flow: column;
    flex-flow: column; } }

.parts-table__td {
  text-align: left !important; }
  @media (max-width: 767px) {
    .parts-table__td {
      width: 100%;
      margin: 0 0 30px; }
      .parts-table__td:before {
        font-size: 18px;
        font-weight: bold;
        width: 50%;
        display: block;
        float: left; } }

.parts-table__total {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-top: 60px; }
  @media (max-width: 767px) {
    .parts-table__total {
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-flow: column;
      flex-flow: column; } }

.parts-table__total-price {
  font-size: 14px;
  padding-right: 50px; }
  @media (max-width: 767px) {
    .parts-table__total-price {
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-flow: column;
      flex-flow: column;
      padding: 0 0 20px; } }
  .parts-table__total-price span {
    font-size: 40px;
    font-family: "Toyota Display";
    font-weight: bold; }
    .parts-table__total-price span:after {
      content: "грн";
      font-size: 14px;
      font-weight: normal; }

@media (max-width: 767px) {
  .art__td:before {
    content: "Артикул"; }
  .name__td:before {
    content: "Назва"; }
  .price__td:before {
    content: "Ціна, грн."; }
  .quant__td:before {
    content: "Кількість, од."; } }

.parts-booklet {
  border: 1px solid #CBCDC9;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-box-shadow: 0px 0px 34px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 34px rgba(77, 79, 83, 0.5);
  border-radius: 5px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  margin: 200px 0; }
  @media (max-width: 1023px) {
    .parts-booklet {
      border: none;
      -webkit-box-shadow: none;
      box-shadow: none;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      margin: 100px 0; } }
  .parts-booklet__wrap {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    border-radius: 5px;
    margin: 20px;
    padding: 40px 0; }
    @media (max-width: 1023px) {
      .parts-booklet__wrap {
        border: none;
        -webkit-box-shadow: none;
        box-shadow: none;
        padding: 0; } }
    .parts-booklet__wrap img {
      margin-bottom: 84px; }
      @media (max-width: 1023px) {
        .parts-booklet__wrap img {
          display: none; } }
  .parts-booklet__left {
    border: 0 1px 0 0 solid #CBCDC9;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: calc(100% / 2);
    text-align: center;
    position: relative; }
    .parts-booklet__left:after {
      content: "";
      position: absolute;
      left: 20px;
      top: 20px;
      width: calc(100% - 40px);
      height: calc(100% - 40px);
      border: 1px solid #CBCDC9;
      border-radius: 3px;
      z-index: -1; }
      @media (max-width: 1023px) {
        .parts-booklet__left:after {
          border: none; } }
    @media (max-width: 1023px) {
      .parts-booklet__left {
        width: calc(100% / 12 * 6 - 30px);
        border: none; } }
    @media (max-width: 767px) {
      .parts-booklet__left {
        width: 100%;
        margin: 0; } }
  .parts-booklet__right {
    -webkit-box-shadow: -21px 0px 62px rgba(77, 79, 83, 0.3);
    box-shadow: -21px 0px 62px rgba(77, 79, 83, 0.3);
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: calc(100% / 2);
    position: relative; }
    .parts-booklet__right:after {
      content: "";
      position: absolute;
      left: 20px;
      top: 20px;
      width: calc(100% - 40px);
      height: calc(100% - 40px);
      border: 1px solid #CBCDC9;
      border-radius: 3px;
      z-index: -1; }
      @media (max-width: 1023px) {
        .parts-booklet__right:after {
          border: none; } }
    @media (max-width: 1023px) {
      .parts-booklet__right {
        width: calc(100% / 12 * 7 - 30px);
        border: none;
        -webkit-box-shadow: none;
        box-shadow: none; } }
    @media (max-width: 767px) {
      .parts-booklet__right {
        width: 100%;
        margin: 0; } }
  .parts-booklet__title {
    padding: 50px 0 70px; }
    @media (max-width: 1023px) {
      .parts-booklet__title {
        padding: 0; } }
  .parts-booklet__booklet-inline {
    padding: 10px 45px;
    display: block;
    color: #23171A; }
    @media (max-width: 1023px) {
      .parts-booklet__booklet-inline {
        padding: 10px 0; } }
  .parts-booklet__booklet-name {
    display: inline-block;
    font-size: 18px;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline;
    padding-right: 10px; }
  .parts-booklet__booklet-size {
    display: inline-block;
    font-style: italic;
    font-size: 18px;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline; }

.parts-card {
  margin-bottom: 220px; }
  @media (max-width: 1023px) {
    .parts-card {
      margin-bottom: 100px; } }
  @media (max-width: 767px) {
    .parts-card {
      margin-bottom: 70px; } }
  .parts-card__description {
    background: url(../img/bg-toyota-big-2.svg) no-repeat bottom left white; }
  .parts-card__right {
    padding-left: 0; }

.page-parts-intravel {
  background: url(../img/bg-accessories-intravel.jpg);
  background-position: left center;
  background-size: cover;
  padding: 150px 0;
  color: white;
  margin-bottom: 0; }
  @media (max-width: 767px) {
    .page-parts-intravel {
      padding: 50px 0 35px; } }

.parts-intravel__wrapper {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 6 - 30px);
  margin: 0 0 0 auto; }
  @media (max-width: 1023px) {
    .parts-intravel__wrapper {
      width: calc(100% / 12 * 10 - 30px);
      margin-left: calc(100% / 12 * 1 + 15px); } }
  @media (max-width: 767px) {
    .parts-intravel__wrapper {
      margin-left: calc(100% / 12 * 0 + 15px);
      width: calc(100% / 12 * 12 - 30px); } }

.parts-intravel__title {
  font-family: "Toyota Display";
  line-height: normal;
  font-size: 40px;
  font-weight: bold; }
  @media (max-width: 767px) {
    .parts-intravel__title {
      font-size: 26px; } }

@media (max-width: 1023px) {
  .parts-card__description {
    padding: 75px 20px 40px;
    float: none;
    -webkit-transform: translateY(-6%);
    -ms-transform: translateY(-6%);
    transform: translateY(-6%);
    width: 100%;
    margin: 0; } }

@media (max-width: 767px) {
  .parts-card__description {
    padding: 105px 10px 50px;
    width: calc(100% / 12 * 12);
    margin: 0; } }

.page-parts-form {
  padding: 0; }

.parts-form {
  padding: 70px 0; }
  .parts-form__title {
    padding-bottom: 10px;
    margin: 0; }
  .parts-form__subtitle {
    margin-bottom: 20px; }
  .parts-form__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    width: calc(100% / 12 * 8 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .parts-form__form {
        width: calc(100% / 12 * 10 - 30px);
        margin-left: calc(100% / 12 * 1 + 15px); } }
    @media (max-width: 767px) {
      .parts-form__form {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px); } }
  .parts-form__input {
    margin: 0 auto;
    display: block;
    width: 30%;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px); }
    @media (max-width: 767px) {
      .parts-form__input {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px);
        margin-top: 30px; } }
  .parts-form__submit {
    margin: 30px auto 0;
    display: block;
    width: calc(100% / 12 * 4 - 30px); }
    @media (max-width: 1023px) {
      .parts-form__submit {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px); } }
    @media (max-width: 767px) {
      .parts-form__submit {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px); } }

.parts-news__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  margin-top: 50px; }
  @media (max-width: 1023px) {
    .parts-news__item {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }

.parts-news__image {
  width: calc(100% / 12 * 3 - 30px);
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  position: relative;
  height: 245px;
  margin-left: calc(100% / 12 * 1 + 15px); }
  @media (max-width: 1023px) {
    .parts-news__image {
      width: calc(100% / 12 * 12 - 30px); } }
  @media (max-width: 767px) {
    .parts-news__image {
      height: 215px; } }
  .parts-news__image img {
    width: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    z-index: 0; }

.parts-news__title {
  margin-bottom: 20px; }

.parts-news__descr {
  width: calc(100% / 12 * 7 - 30px);
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  position: relative; }
  @media (max-width: 1023px) {
    .parts-news__descr {
      margin-top: 20px;
      width: calc(100% / 12 * 10 - 30px); } }
  .parts-news__descr p {
    margin-top: 0; }

@media (max-width: 1023px) {
  .page-parts-nav {
    display: none; } }

.page-accessories-head {
  color: white;
  background-image: url(../img/bg-accessories-head.jpg);
  background-repeat: no-repeat;
  background-position: top;
  background-size: cover;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.accessories-order {
  padding: 100px 0 50px; }
  .accessories-order__subtitle {
    margin: 20px 0;
    color: #1D71B8; }
  .accessories-order__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px; }
  .accessories-order__input {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .accessories-order__input {
        width: calc(100% / 12 * 8 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
    @media (max-width: 767px) {
      .accessories-order__input {
        width: calc(100% / 12 * 12 - 30px);
        margin-bottom: 20px; } }
  .accessories-order__submit {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px); }
    @media (max-width: 1023px) {
      .accessories-order__submit {
        width: calc(100% / 12 * 4 - 30px); } }
    @media (max-width: 767px) {
      .accessories-order__submit {
        width: calc(100% / 12 * 12 - 30px); } }

.accessories-table__thead-wrapper {
  padding: 23px 0;
  margin-bottom: 15px; }
  @media (max-width: 767px) {
    .accessories-table__thead-wrapper {
      display: none; } }

.accessories-table__tr-wrapper {
  border: none;
  padding: 15px 0 0;
  min-width: 100%; }
  @media (max-width: 767px) {
    .accessories-table__tr-wrapper {
      border-top: solid 1px rgba(203, 205, 201, 0.2);
      border-bottom: solid 1px rgba(203, 205, 201, 0.2); } }

@media (max-width: 767px) {
  .accessories-table__tr {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-flow: column;
    flex-flow: column; } }

.accessories-table__td {
  text-align: left !important; }
  @media (max-width: 767px) {
    .accessories-table__td {
      width: 100%;
      margin: 0 0 30px; }
      .accessories-table__td:before {
        font-size: 18px;
        font-weight: bold;
        width: 50%;
        display: block;
        float: left; } }

.accessories-table__total {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-top: 60px; }
  @media (max-width: 767px) {
    .accessories-table__total {
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-flow: column;
      flex-flow: column; } }

.accessories-table__total-price {
  font-size: 14px;
  padding-right: 50px; }
  @media (max-width: 767px) {
    .accessories-table__total-price {
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-flow: column;
      flex-flow: column;
      padding: 0 0 20px; } }
  .accessories-table__total-price span {
    font-size: 40px;
    font-family: "Toyota Display";
    font-weight: bold; }
    .accessories-table__total-price span:after {
      content: "грн";
      font-size: 14px;
      font-weight: normal; }

@media (max-width: 767px) {
  .art__td:before {
    content: "Артикул"; }
  .name__td:before {
    content: "Назва"; }
  .price__td:before {
    content: "Ціна, грн."; }
  .quant__td:before {
    content: "Кількість, од."; } }

.accessories-booklet {
  border: 1px solid #CBCDC9;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-box-shadow: 0px 0px 34px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 34px rgba(77, 79, 83, 0.5);
  border-radius: 5px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  margin: 200px 0; }
  @media (max-width: 1023px) {
    .accessories-booklet {
      border: none;
      -webkit-box-shadow: none;
      box-shadow: none;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      margin: 100px 0; } }
  .accessories-booklet__wrap {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    border-radius: 5px;
    margin: 20px;
    padding: 40px 0; }
    @media (max-width: 1023px) {
      .accessories-booklet__wrap {
        border: none;
        -webkit-box-shadow: none;
        box-shadow: none;
        padding: 0; } }
    .accessories-booklet__wrap img {
      margin-bottom: 84px; }
      @media (max-width: 1023px) {
        .accessories-booklet__wrap img {
          display: none; } }
  .accessories-booklet__left {
    border: 0 1px 0 0 solid #CBCDC9;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: calc(100% / 2);
    text-align: center;
    position: relative; }
    .accessories-booklet__left:after {
      content: "";
      position: absolute;
      left: 20px;
      top: 20px;
      width: calc(100% - 40px);
      height: calc(100% - 40px);
      border: 1px solid #CBCDC9;
      border-radius: 3px;
      z-index: -1; }
      @media (max-width: 1023px) {
        .accessories-booklet__left:after {
          border: none; } }
    @media (max-width: 1023px) {
      .accessories-booklet__left {
        width: calc(100% / 12 * 6 - 30px);
        border: none; } }
    @media (max-width: 767px) {
      .accessories-booklet__left {
        width: 100%;
        margin: 0; } }
  .accessories-booklet__right {
    -webkit-box-shadow: -21px 0px 62px rgba(77, 79, 83, 0.3);
    box-shadow: -21px 0px 62px rgba(77, 79, 83, 0.3);
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: calc(100% / 2);
    position: relative; }
    .accessories-booklet__right:after {
      content: "";
      position: absolute;
      left: 20px;
      top: 20px;
      width: calc(100% - 40px);
      height: calc(100% - 40px);
      border: 1px solid #CBCDC9;
      border-radius: 3px;
      z-index: -1; }
      @media (max-width: 1023px) {
        .accessories-booklet__right:after {
          border: none; } }
    @media (max-width: 1023px) {
      .accessories-booklet__right {
        width: calc(100% / 12 * 7 - 30px);
        border: none;
        -webkit-box-shadow: none;
        box-shadow: none; } }
    @media (max-width: 767px) {
      .accessories-booklet__right {
        width: 100%;
        margin: 0; } }
  .accessories-booklet__title {
    padding: 50px 0 70px; }
    @media (max-width: 1023px) {
      .accessories-booklet__title {
        padding: 0; } }
  .accessories-booklet__booklet-inline {
    padding: 10px 45px;
    display: block;
    color: #23171A; }
    @media (max-width: 1023px) {
      .accessories-booklet__booklet-inline {
        padding: 10px 0; } }
  .accessories-booklet__booklet-name {
    display: inline-block;
    font-size: 18px;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline;
    padding-right: 10px; }
  .accessories-booklet__booklet-size {
    display: inline-block;
    font-style: italic;
    font-size: 18px;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline; }

.accessories-card {
  margin-bottom: 220px; }
  @media (max-width: 767px) {
    .accessories-card {
      margin-bottom: 70px; } }
  .accessories-card__description {
    background: url(../img/bg-toyota-big-2.svg) no-repeat bottom left white; }
  .accessories-card__right {
    padding-left: 0; }

.page-accessories-intravel {
  background: url(../img/bg-accessories-intravel.jpg);
  background-position: left center;
  background-size: cover;
  padding: 150px 0;
  color: white;
  margin-bottom: 0; }
  @media (max-width: 767px) {
    .page-accessories-intravel {
      padding: 50px 0 35px; } }

.accessories-intravel__wrapper {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 6 - 30px);
  margin: 0 0 0 auto; }
  @media (max-width: 1023px) {
    .accessories-intravel__wrapper {
      width: calc(100% / 12 * 10 - 30px);
      margin-left: calc(100% / 12 * 1 + 15px); } }
  @media (max-width: 767px) {
    .accessories-intravel__wrapper {
      margin-left: calc(100% / 12 * 0 + 15px);
      width: calc(100% / 12 * 12 - 30px); } }

.accessories-intravel__title {
  font-family: "Toyota Display";
  line-height: normal;
  font-size: 40px;
  font-weight: bold; }
  @media (max-width: 767px) {
    .accessories-intravel__title {
      font-size: 26px; } }

@media (max-width: 1023px) {
  .accessories-card__description {
    padding: 75px 20px 40px;
    float: none;
    -webkit-transform: translateY(-6%);
    -ms-transform: translateY(-6%);
    transform: translateY(-6%);
    width: 100%;
    margin: 0; } }

@media (max-width: 767px) {
  .accessories-card__description {
    padding: 105px 10px 50px;
    width: calc(100% / 12 * 12);
    margin: 0; } }

.page-accessories-form {
  padding: 0; }

.accessories-form {
  padding: 70px 0; }
  .accessories-form__title {
    padding-bottom: 10px;
    margin: 0; }
  .accessories-form__subtitle {
    margin-bottom: 20px; }
  .accessories-form__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    width: calc(100% / 12 * 8 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .accessories-form__form {
        width: calc(100% / 12 * 10 - 30px);
        margin-left: calc(100% / 12 * 1 + 15px); } }
    @media (max-width: 767px) {
      .accessories-form__form {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px); } }
  .accessories-form__input {
    margin: 0 auto;
    display: block;
    width: 30%;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px); }
    @media (max-width: 767px) {
      .accessories-form__input {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px);
        margin-top: 30px; } }
  .accessories-form__submit {
    margin: 30px auto 0;
    display: block;
    width: calc(100% / 12 * 4 - 30px); }
    @media (max-width: 1023px) {
      .accessories-form__submit {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px); } }
    @media (max-width: 767px) {
      .accessories-form__submit {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px); } }

.page-protect {
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px; }
  @media screen and (max-width: 992px) {
    .page-protect {
      padding-left: 15px;
      padding-right: 15px; } }

.protect-info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px; }
  .protect-info__image-wrapper {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 5 - 30px); }
  .protect-info__image {
    width: 130%;
    float: right; }
  .protect-info__text {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 7 - 30px);
    position: relative;
    padding-top: 70px;
    padding-bottom: 70px;
    padding-right: 30px;
    margin-top: 30px;
    box-sizing: border-box; }
    .protect-info__text:after {
      content: "";
      position: absolute;
      right: 0;
      top: 0;
      width: 122%;
      height: 100%;
      border-radius: 5px;
      background-color: #fafafa;
      z-index: -1;
      background-image: url("../img/bg-toyota-alt.svg");
      background-position: -262% 163%;
      background-repeat: no-repeat; }

.protect-banner {
  margin-top: 100px; }
  .protect-banner__image {
    width: 100%; }

.page-touch {
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  padding-bottom: 0; }
  @media screen and (max-width: 992px) {
    .page-touch {
      padding-left: 15px;
      padding-right: 15px; } }

.page-touch-listing {
  padding-bottom: 200px; }
  .page-touch-listing__wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px; }
  .page-touch-listing__item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    margin-top: 100px; }
  .page-touch-listing__slider {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 5 - 30px); }
    .page-touch-listing__slider img {
      width: 100%; }
    .page-touch-listing__slider .fotorama__arr {
      width: 28px;
      height: 38px;
      margin-left: -3px;
      margin-right: -3px; }
    .page-touch-listing__slider .fotorama__nav-wrap {
      position: static;
      margin-top: 20px; }
  .page-touch-listing__text {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 7 - 30px);
    position: relative;
    padding-top: 70px;
    padding-bottom: 70px;
    padding-right: 30px; }
    .page-touch-listing__text:after {
      content: "";
      position: absolute;
      right: 0;
      top: 0;
      width: 122%;
      height: 100%;
      background-color: #fafafa;
      z-index: -1;
      border-radius: 5px; }
  .page-touch-listing--shift .page-touch-listing__item:nth-of-type(2n) {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse; }
    .page-touch-listing--shift .page-touch-listing__item:nth-of-type(2n) .page-touch-listing__text:after {
      width: 200%; }

.touch-form {
  padding: 70px 0;
  background-color: #F3F4F6; }
  .touch-form__inner {
    max-width: 1320px;
    margin: 0 auto;
    padding-left: 0px;
    padding-right: 0px; }
    @media screen and (max-width: 992px) {
      .touch-form__inner {
        padding-left: 15px;
        padding-right: 15px; } }
  .touch-form .textfield {
    width: calc(100% / 12 * 4 - 30px); }
  .touch-form .btn {
    margin-left: auto;
    margin-right: auto; }

.page-credit-head {
  color: white;
  background-image: url(../img/bg-credit-head.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.credit-card {
  margin: 131px 0; }
  @media (max-width: 1023px) {
    .credit-card {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: reverse;
      -ms-flex-direction: column-reverse;
      flex-direction: column-reverse;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      padding-bottom: 0;
      margin: 100px 0; } }
  .credit-card__description {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 8.5 - 30px);
    padding: 70px 0 52px 168px;
    float: right;
    border-radius: 5px;
    background: url(../img/bg-toyota-big-2.svg) no-repeat bottom left #FAFAFA; }
    @media (max-width: 1023px) {
      .credit-card__description {
        padding: 30px 30px;
        float: none;
        -webkit-transform: translateY(-11%);
        -ms-transform: translateY(-11%);
        transform: translateY(-11%);
        width: 100%;
        margin: 0; } }
    @media (max-width: 767px) {
      .credit-card__description {
        padding: 105px 10px 50px;
        width: calc(100% / 12 * 12);
        position: relative;
        margin: 0; } }
  .credit-card__title {
    text-align: left; }
    @media (max-width: 1023px) {
      .credit-card__title {
        text-align: center; } }
  .credit-card__image {
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 5px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 5 - 30px);
    height: 380px;
    position: absolute;
    z-index: 1;
    -webkit-transform: translateY(-10%);
    -ms-transform: translateY(-10%);
    transform: translateY(-10%); }
    @media (max-width: 1023px) {
      .credit-card__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 530px;
        position: relative; } }
    @media (max-width: 767px) {
      .credit-card__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 215px;
        position: relative; } }
    .credit-card__image img {
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      border-radius: 5px;
      top: 0;
      left: 0; }
  .credit-card__bank {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px; }
  .credit-card__logo {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2.5 - 30px); }
  .credit-card__license {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 9.5 - 30px); }

.page-credit-form {
  padding: 0; }

.credit-form {
  padding: 70px 0; }
  .credit-form__title {
    padding-bottom: 10px;
    margin: 0; }
    @media (max-width: 1023px) {
      .credit-form__title {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px); } }
    @media (max-width: 767px) {
      .credit-form__title {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .credit-form__subtitle {
    margin-bottom: 50px; }
  .credit-form__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px; }
  .credit-form__car {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin-left: calc(100% / 12 * 1 + 15px); }
    @media (max-width: 1023px) {
      .credit-form__car {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px);
        margin-bottom: 30px; } }
    @media (max-width: 767px) {
      .credit-form__car {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .credit-form__percent {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px); }
    @media (max-width: 1023px) {
      .credit-form__percent {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px);
        margin-bottom: 30px; } }
    @media (max-width: 767px) {
      .credit-form__percent {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .credit-form .select {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px); }
    @media (max-width: 1023px) {
      .credit-form .select {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px);
        margin-bottom: 30px; }
        .credit-form .select:last-of-type {
          margin-bottom: 10px; } }
    @media (max-width: 767px) {
      .credit-form .select {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .credit-form__term {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px); }
    @media (max-width: 1023px) {
      .credit-form__term {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px);
        margin-bottom: 30px; } }
    @media (max-width: 767px) {
      .credit-form__term {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .credit-form__name {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin-left: calc(100% / 12 * 1 + 15px); }
    @media (max-width: 1023px) {
      .credit-form__name {
        width: calc(100% / 12 * 5 - 30px);
        margin-left: calc(100% / 12 * 1 + 15px);
        margin-bottom: 30px; } }
    @media (max-width: 767px) {
      .credit-form__name {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .credit-form__phone {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3.5 - 30px); }
    @media (max-width: 1023px) {
      .credit-form__phone {
        width: calc(100% / 12 * 5 - 30px);
        margin-bottom: 30px; } }
    @media (max-width: 767px) {
      .credit-form__phone {
        width: calc(100% / 12 * 12 - 30px); } }
  .credit-form__submit {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2.5 - 30px); }
    @media (max-width: 1023px) {
      .credit-form__submit {
        width: calc(100% / 12 * 4 - 30px);
        margin-left: calc(100% / 12 * 4 + 15px); } }
    @media (max-width: 767px) {
      .credit-form__submit {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .credit-form__rate {
    margin: 50px 0;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 12 - 30px);
    text-align: center;
    font-weight: bold;
    font-size: 24px; }
    @media (max-width: 1023px) {
      .credit-form__rate {
        margin-top: 10px;
        margin-bottom: 20px; } }
    @media (max-width: 767px) {
      .credit-form__rate {
        margin-top: 0px;
        margin-bottom: 50px;
        line-height: 46px; }
        .credit-form__rate span {
          display: block; } }
  .credit-form__questions {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 12 - 30px);
    margin-left: calc(100% / 12 * 1 + 15px);
    font-style: italic;
    font-weight: 300;
    line-height: normal;
    font-size: 14px;
    margin-top: 20px; }
    @media (max-width: 1023px) {
      .credit-form__questions {
        width: calc(100% / 12 * 5 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px); } }
    @media (max-width: 767px) {
      .credit-form__questions {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
    .credit-form__questions span {
      display: block; }

.percent {
  font-size: 46px; }

.manager-list {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }

.page-credit-manager {
  padding: 200px 0; }
  @media (max-width: 1023px) {
    .page-credit-manager {
      padding: 100px 0; } }

.page-lising-head {
  color: white;
  background-image: url(../img/bg-lising-head.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.lising-card {
  margin: 155px 0 210px; }
  @media (max-width: 1023px) {
    .lising-card {
      margin: 110px 0 100px;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: reverse;
      -ms-flex-direction: column-reverse;
      flex-direction: column-reverse;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center; } }
  .lising-card__description {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 8 - 30px);
    padding: 70px 220px 60px 0px;
    position: absolute;
    background: url(../img/bg-toyota-big-3.svg) no-repeat bottom right white; }
    @media (max-width: 1023px) {
      .lising-card__description {
        width: 100%;
        position: relative;
        -webkit-transform: none;
        -ms-transform: none;
        transform: none;
        padding: 20px 20px 50px;
        margin: 0; } }
    @media (max-width: 767px) {
      .lising-card__description {
        width: calc(100% / 12 * 12);
        position: relative;
        -webkit-transform: translateY(-6%);
        -ms-transform: translateY(-6%);
        transform: translateY(-6%);
        padding: 50px 10px 50px;
        z-index: 0; } }
  .lising-card__image {
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 5.5 - 30px);
    height: 380px;
    position: relative;
    float: right;
    z-index: 1; }
    @media (max-width: 1023px) {
      .lising-card__image {
        width: calc(100% / 12 * 12 - 30px);
        float: none;
        height: 520px; } }
    @media (max-width: 767px) {
      .lising-card__image {
        width: calc(100% / 12 * 12 - 30px);
        float: none;
        height: 215px; } }
    .lising-card__image img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }
  .lising-card__title {
    font-family: "Toyota Display";
    line-height: normal;
    font-size: 24px;
    letter-spacing: 0.1em;
    font-weight: bold;
    margin: 0; }
  .lising-card__info {
    padding-top: 30px;
    line-height: normal;
    font-size: 18px;
    margin: 0; }
  .lising-card_p {
    display: block;
    padding-top: 20px;
    margin: 0; }
  .lising-card__btn {
    margin-top: 30px;
    color: white; }

.lising-steps-title:before {
  background-image: url(../img/i-toyota-white.svg); }

.page-lising-steps {
  padding: 70px 0;
  color: white; }

.lising-steps {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 10 - 30px);
  margin-left: calc(100% / 12 * 1 + 15px); }

.lising-steps-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 7 - 30px);
  margin-left: calc(100% / 12 * 2 + 15px);
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  @media (max-width: 1023px) {
    .lising-steps-list {
      width: calc(100% / 12 * 12 - 30px);
      margin-left: calc(100% / 12 * 0 + 15px); } }
  .lising-steps-list__item {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 10 - 30px);
    margin-top: 40px; }
    @media (max-width: 1023px) {
      .lising-steps-list__item {
        margin-top: 30px; } }
    @media (max-width: 767px) {
      .lising-steps-list__item {
        width: calc(100% / 12 * 12 - 30px); } }
  .lising-steps-list__icon {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px);
    margin-top: 40px; }
    @media (max-width: 1023px) {
      .lising-steps-list__icon {
        margin-top: 30px; } }

.lising-steps-subtitle {
  margin-bottom: 10px; }

.lising-advantage {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 8 - 30px);
  margin-left: calc(100% / 12 * 2 + 15px);
  margin-top: 100px;
  padding-left: 15px; }
  @media (max-width: 1023px) {
    .lising-advantage {
      width: calc(100% / 12 * 12 - 30px);
      margin-left: calc(100% / 12 * 0 + 15px); } }
  .lising-advantage__title {
    font-family: "Toyota Text";
    line-height: normal;
    font-size: 24px;
    font-weight: bold;
    padding-bottom: 10px; }
  .lising-advantage__list {
    margin: 0;
    padding-left: 20px; }
  .lising-advantage__item {
    line-height: 21px; }

.page-lising-form {
  padding: 0; }

.lising-form {
  padding: 70px 0; }
  .lising-form__title {
    padding-bottom: 10px;
    margin: 0; }
  .lising-form__subtitle {
    margin-bottom: 20px; }
  .lising-form__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    width: calc(100% / 12 * 8 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .lising-form__form {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  .lising-form__input {
    margin: 30px auto 0;
    display: block;
    width: 30%;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px); }
    @media (max-width: 767px) {
      .lising-form__input {
        width: calc(100% / 12 * 12 - 30px); } }
  .lising-form__submit {
    margin: 30px auto 0;
    display: block;
    width: calc(100% / 12 * 4 - 30px); }
    @media (max-width: 767px) {
      .lising-form__submit {
        width: calc(100% / 12 * 12 - 30px); } }

.page-insurance-head {
  color: white;
  background-image: url(../img/bg-insurance-head.jpg);
  background-repeat: no-repeat;
  background-position: top;
  background-size: cover;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.insurance-info {
  padding: 100px 0 200px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 8 - 30px);
  margin-left: calc(100% / 12 * 2 + 15px); }
  @media (max-width: 1023px) {
    .insurance-info {
      width: calc(100% / 12 * 12 - 30px);
      margin-left: calc(100% / 12 * 0 + 15px);
      padding: 100px 0 100px; } }
  .insurance-info__subtitle {
    margin-bottom: 30px; }
  .insurance-info__logo {
    float: left;
    margin: 0 20px 0 0; }
    @media (max-width: 767px) {
      .insurance-info__logo {
        float: none; }
        .insurance-info__logo img {
          margin: 0 auto;
          display: block; } }
  .insurance-info__description-list {
    padding: 20px 0 0 20px; }

.insurance-card {
  margin-bottom: 200px; }
  @media (max-width: 1023px) {
    .insurance-card__title {
      text-align: center; }
      .insurance-card__title:before {
        content: none; } }
  @media (max-width: 767px) {
    .insurance-card__title {
      text-align: left; } }
  .insurance-card__description {
    background: url(../img/bg-toyota-big-half.svg) no-repeat bottom left white; }
    @media (max-width: 1023px) {
      .insurance-card__description {
        width: 100%;
        margin: 0; } }
  .insurance-card__right {
    padding-left: 0; }

.page-insurance-form {
  padding: 0; }
  @media (max-width: 1023px) {
    .page-insurance-form {
      display: none; } }

.insurance-form {
  padding: 70px 0; }
  .insurance-form__title {
    padding-bottom: 10px;
    margin: 0; }
  .insurance-form__subtitle {
    margin-bottom: 20px; }
  .insurance-form__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    width: calc(100% / 12 * 8 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
  .insurance-form__input {
    margin: 0 auto;
    display: block;
    width: 30%;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px); }
  .insurance-form__submit {
    margin: 30px auto 0;
    display: block;
    width: calc(100% / 12 * 4 - 30px); }

.manager-list {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }

.page-insurance-manager {
  padding: 70px 0 200px; }
  @media (max-width: 767px) {
    .page-insurance-manager {
      padding-top: 0; } }

.page-avtosamit-head {
  color: white;
  background-image: url(../img/bg-available.jpg);
  background-repeat: no-repeat;
  background-position: top;
  background-size: cover;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.page-avtosamit-timeline {
  padding: 100px 0 65px; }
  @media (max-width: 1023px) {
    .page-avtosamit-timeline {
      padding: 100px 0 0px; } }

.page-avtosamit-photo {
  padding: 0; }

.avtosamit-form {
  padding: 70px 0; }
  .avtosamit-form__title {
    padding-bottom: 10px;
    margin: 0; }
  .avtosamit-form__subtitle {
    margin-bottom: 20px; }
  .avtosamit-form__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    width: calc(100% / 12 * 8 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .avtosamit-form__form {
        width: calc(100% / 12 * 10 - 30px);
        margin-left: calc(100% / 12 * 1 + 15px); } }
    @media (max-width: 767px) {
      .avtosamit-form__form {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px); } }
  .avtosamit-form__input {
    margin: 0 auto;
    display: block;
    width: 30%;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px); }
    @media (max-width: 767px) {
      .avtosamit-form__input {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px);
        margin-top: 30px; } }
  .avtosamit-form__submit {
    margin: 30px auto 0;
    display: block;
    width: calc(100% / 12 * 4 - 30px); }
    @media (max-width: 1023px) {
      .avtosamit-form__submit {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3 + 15px); } }
    @media (max-width: 767px) {
      .avtosamit-form__submit {
        margin-left: calc(100% / 12 * 0 + 15px);
        width: calc(100% / 12 * 12 - 30px); } }

.page-avtosamit-form {
  padding: 0; }

/* The actual timeline (the vertical ruler) */
.avtosamit-timeline {
  position: relative;
  max-width: 1200px;
  margin: 0 auto; }
  .avtosamit-timeline::after {
    content: '';
    position: absolute;
    width: 0px;
    top: 0;
    bottom: -30px;
    left: 50%;
    border: 1px dashed rgba(0, 0, 0, 0.5); }
    @media (max-width: 1023px) {
      .avtosamit-timeline::after {
        left: 25.8%; } }
    @media (max-width: 767px) {
      .avtosamit-timeline::after {
        display: none; } }
  .avtosamit-timeline__container {
    position: relative;
    background-color: inherit;
    width: 40%; }
    @media (max-width: 1023px) {
      .avtosamit-timeline__container {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 3.5 + 15px); } }
    @media (max-width: 767px) {
      .avtosamit-timeline__container {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
    .avtosamit-timeline__container::after {
      content: '';
      position: absolute;
      display: inline-block;
      width: 25px;
      height: 25px;
      right: -16%;
      background-image: url(../img/i-autosamit.svg);
      background-size: contain;
      background-repeat: no-repeat;
      border-radius: 50%;
      background-color: white;
      top: 0px;
      z-index: 1; }
      @media (max-width: 767px) {
        .avtosamit-timeline__container::after {
          display: none; } }
  .avtosamit-timeline__left {
    left: 5%; }
    @media (max-width: 1023px) {
      .avtosamit-timeline__left {
        left: 0%; }
        .avtosamit-timeline__left::after {
          left: -15%; } }
  .avtosamit-timeline__right {
    left: 55%; }
    @media (max-width: 1023px) {
      .avtosamit-timeline__right {
        left: 0%; } }
    .avtosamit-timeline__right::after {
      left: -15%; }
      @media (max-width: 1023px) {
        .avtosamit-timeline__right::after {
          left: -15%; } }
  .avtosamit-timeline__content {
    background-color: white;
    position: relative;
    border-radius: 6px;
    margin-bottom: 30px; }
    .avtosamit-timeline__content span {
      font-size: 36px;
      font-weight: 700; }

.avtosamit-timeline__container:last-child .avtosamit-timeline__content {
  margin-bottom: 100px; }

.avtosamit-info__wrapper {
  border: 1px dashed rgba(0, 0, 0, 0.5);
  position: relative;
  width: calc(100% / 12 * 8 - 30px);
  margin-left: calc(100% / 12 * 2 + 15px); }
  @media (max-width: 1023px) {
    .avtosamit-info__wrapper {
      width: calc(100% / 12 * 12 - 30px);
      margin-left: calc(100% / 12 * 0 + 15px); } }
  @media (max-width: 767px) {
    .avtosamit-info__wrapper {
      margin-left: calc(100% / 12 * 0 + 15px);
      width: calc(100% / 12 * 12 - 30px);
      border: none; } }
  .avtosamit-info__wrapper::before {
    content: '';
    position: absolute;
    display: inline-block;
    width: 125px;
    height: 125px;
    right: 43%;
    background-image: url(../img/i-autosamit.svg);
    background-size: contain;
    background-repeat: no-repeat;
    border-radius: 50%;
    background-color: white;
    top: -95px;
    z-index: 1; }
    @media (max-width: 1023px) {
      .avtosamit-info__wrapper::before {
        right: 67%; } }
    @media (max-width: 767px) {
      .avtosamit-info__wrapper::before {
        display: none; } }

.avtosamit-info__title {
  text-align: center;
  font-size: 24px; }
  @media (max-width: 1023px) {
    .avtosamit-info__title {
      text-align: left; } }

.avtosamit-info__text {
  padding: 120px 110px; }
  @media (max-width: 767px) {
    .avtosamit-info__text {
      padding: 0px; } }

.avtosamit-info__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  top: -88px;
  position: relative;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  @media (max-width: 767px) {
    .avtosamit-info__list {
      top: 0;
      margin: 60px 0 40px; } }

.avtosamit-info__item {
  text-align: center;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 2 - 30px);
  border: 1px dashed rgba(0, 0, 0, 0.5);
  background: white; }
  @media (max-width: 1023px) {
    .avtosamit-info__item {
      width: calc(100% / 12 * 3 - 30px); } }
  @media (max-width: 767px) {
    .avtosamit-info__item {
      width: calc(100% / 12 * 12 - 30px);
      border: none;
      background: none; } }
  .avtosamit-info__item-text {
    padding: 65px 0; }
    @media (max-width: 767px) {
      .avtosamit-info__item-text {
        padding: 40px 0; } }
    .avtosamit-info__item-text span {
      font-weight: bold;
      letter-spacing: 0; }
    .avtosamit-info__item-text p {
      margin: 0;
      line-height: 16px; }
    .avtosamit-info__item-text-main {
      font-size: 36px; }

.postnav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }
  .postnav__inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
  .postnav__arrow {
    font-size: 0;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s;
    will-change: transform; }
    .postnav__arrow:active {
      -webkit-transform: scale(1.1, 0.85);
      -ms-transform: scale(1.1, 0.85);
      transform: scale(1.1, 0.85); }
  .postnav__links-wrapper {
    margin: 0 45px; }
  .postnav__link {
    color: inherit;
    text-decoration: none;
    padding: 3px; }
    .postnav__link--active {
      font-size: 130%;
      color: #CC0033; }

.breadcrumbs-story-alone {
  padding-top: 70px; }

.page-story-head {
  min-height: 210px; }

.story-alone__content {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(100% / 12 * 8 - 30px);
  margin-left: calc(100% / 12 * 2 + 15px); }
  @media (max-width: 1023px) {
    .story-alone__content {
      width: calc(100% / 12 * 12 - 30px);
      margin-left: calc(100% / 12 * 0 + 15px); } }

.story-alone__image {
  height: 600px;
  position: relative; }
  @media (max-width: 1023px) {
    .story-alone__image {
      height: 380px; } }
  @media (max-width: 767px) {
    .story-alone__image {
      height: 150px; } }
  .story-alone__image img {
    width: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    -webkit-box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 14px rgba(77, 79, 83, 0.25);
    border-radius: 5px; }

.story-alone__video iframe {
  height: 600px;
  width: 100%; }
  @media (max-width: 1023px) {
    .story-alone__video iframe {
      height: 380px; } }
  @media (max-width: 767px) {
    .story-alone__video iframe {
      height: 245px; } }

.story-alone__text {
  margin: 30px 0; }
  .story-alone__text-img {
    float: left;
    margin: 0 20px 0 0; }
    @media (max-width: 1023px) {
      .story-alone__text-img {
        margin: 0 10px 0 0; } }
    @media (max-width: 767px) {
      .story-alone__text-img {
        margin: 0;
        float: none; }
        .story-alone__text-img img {
          width: 100%; } }

.story-alone__nav {
  font-weight: bold;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  .story-alone__nav-back-btn {
    cursor: pointer;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 2 - 30px); }
    @media (max-width: 767px) {
      .story-alone__nav-back-btn {
        width: calc(100% / 12 * 4 - 30px);
        margin-left: calc(100% / 12 * 4 + 15px);
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        justify-content: space-between;
        padding: 50px 0; } }
    .story-alone__nav-back-btn:hover {
      text-decoration: underline; }
    .story-alone__nav-back-btn::before {
      display: inline-block;
      content: "";
      vertical-align: middle;
      width: 11px;
      height: 10px;
      margin-right: 10px;
      background: url("../img/i-back.svg") center no-repeat; }
  .story-alone__nav-share {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 8 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px);
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
    @media (max-width: 767px) {
      .story-alone__nav-share {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px);
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        justify-content: space-between; } }
    .story-alone__nav-share-btn {
      cursor: pointer;
      margin-left: 20px;
      margin-right: 0;
      background: #FFFFFF;
      -webkit-box-shadow: 2px 2px 6px rgba(44, 1, 12, 0.3);
      box-shadow: 2px 2px 6px rgba(44, 1, 12, 0.3); }

.a-news-grid {
  padding-bottom: 50px; }
  .a-news-grid-item {
    text-decoration: none;
    color: #23171A;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px); }
    @media (max-width: 1023px) {
      .a-news-grid-item {
        width: calc(100% / 12 * 4 - 30px); } }
    @media (max-width: 767px) {
      .a-news-grid-item {
        width: 100%;
        margin: 0; } }
    .a-news-grid-item__date {
      display: none; }
      @media (max-width: 1023px) {
        .a-news-grid-item__date {
          display: inline-block;
          margin: 20px 10px 0; }
          .a-news-grid-item__date:before {
            content: "";
            display: inline-block;
            height: 18px;
            width: 6px;
            margin-right: 10px;
            background-color: #CC0033;
            border-radius: 100px; } }
    .a-news-grid-item__title {
      margin: 20px 10px 0;
      display: inline-block; }
      @media (max-width: 1023px) {
        .a-news-grid-item__title {
          margin: 10px 10px 0; }
          .a-news-grid-item__title:after {
            width: 18px;
            height: 18px;
            display: inline-block;
            content: "";
            margin-left: 10px;
            background: url("../img/i-more-arrow.svg") center no-repeat;
            vertical-align: middle; } }
    .a-news-grid-item__img {
      width: 100%; }

.offer {
  margin-top: 100px;
  margin-bottom: 100px;
  padding: 0;
  overflow: hidden; }

.offer-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }
  @media screen and (max-width: 992px) {
    .offer-item {
      padding-left: 15px;
      padding-right: 15px; } }
  .offer-item__info {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px);
    padding-left: 20px;
    padding-top: 70px;
    padding-bottom: 70px;
    -webkit-box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    box-shadow: 4px 4px 24px rgba(77, 79, 83, 0.25);
    border-radius: 2px;
    box-sizing: border-box;
    padding-right: 9%; }
    .offer-item__info p {
      margin-bottom: 30px;
      margin-top: 30px;
      font-size: 18px;
      line-height: 21px; }
  .offer-item__img-wrap {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 6 - 30px);
    margin-left: -6.8%;
    font-size: 0; }
  .offer-item__img {
    width: 141%; }

.gallery__item {
  margin-bottom: 100px;
  overflow: hidden; }

.gallery__title {
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  margin-bottom: 20px; }
  @media screen and (max-width: 992px) {
    .gallery__title {
      padding-left: 15px;
      padding-right: 15px; } }

.gallery__subtitle {
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  margin-bottom: 30px; }
  @media screen and (max-width: 992px) {
    .gallery__subtitle {
      padding-left: 15px;
      padding-right: 15px; } }

.gallery__counter {
  position: absolute;
  right: 40px;
  bottom: 30px;
  font-family: "Toyota Display";
  font-size: 24px;
  color: #fff;
  letter-spacing: .1em;
  z-index: 3;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  pointer-events: none; }

.gallery__grid {
  position: relative;
  height: 42.5vw;
  max-height: 70vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.gallery__col {
  position: relative;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 56%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .gallery__col:after {
    content: "";
    position: absolute;
    display: block;
    width: calc(100vw - 58vw);
    height: 100%;
    left: 0;
    top: 0;
    background: -webkit-linear-gradient(180.36deg, rgba(0, 0, 0, 0.6) 30.49%, rgba(196, 196, 196, 0) 99.64%);
    background: -o-linear-gradient(180.36deg, rgba(0, 0, 0, 0.6) 30.49%, rgba(196, 196, 196, 0) 99.64%);
    background: linear-gradient(269.64deg, rgba(0, 0, 0, 0.6) 30.49%, rgba(196, 196, 196, 0) 99.64%);
    pointer-events: none; }
  .gallery__col--full {
    width: 59%; }
    .gallery__col--full .gallery__tile {
      width: 100%;
      height: 100%; }
    .gallery__col--full:after {
      display: none; }

.gallery__tile {
  width: 33.33333333333%;
  height: 33.3333333333%;
  margin: 0;
  display: block;
  overflow: hidden; }

.gallery__img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  -webkit-transition: all 1s ease-out;
  -o-transition: all 1s ease-out;
  transition: all 1s ease-out;
  will-change: transform; }
  .gallery__img:hover {
    -webkit-transform: scale(1.15);
    -ms-transform: scale(1.15);
    transform: scale(1.15); }

.page-vacancies-head {
  background-image: url(../img/bg-vacancies-head.jpg);
  background-repeat: no-repeat;
  background-position: top;
  background-size: cover;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  color: #23171A; }
  .page-vacancies-head .breadcrumbs {
    padding-top: 70px; }
    .page-vacancies-head .breadcrumbs__item:not(:first-child)::before {
      background: #23171A; }

.is-opened .vacancies-terms__item-head:after {
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg); }

.vacancies-terms {
  margin: 100px 0 200px; }
  @media (max-width: 1023px) {
    .vacancies-terms {
      margin: 70px 0 200px; } }
  .vacancies-terms__bold {
    font-weight: bold; }
  .vacancies-terms__title {
    margin-bottom: 10px; }
  .vacancies-terms__subtitle {
    width: calc(100% / 12 * 7 - 30px);
    margin-left: calc(100% / 12 * 2.5 + 15px);
    font-size: 18px;
    margin-bottom: 30px; }
    @media (max-width: 1023px) {
      .vacancies-terms__subtitle {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
  @media (max-width: 1023px) {
    .vacancies-terms__wraper {
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      word-wrap: break-word;
      margin-left: 15px;
      margin-right: 15px;
      width: calc(100% / 12 * 12 - 30px); } }
  @media (max-width: 767px) {
    .vacancies-terms__wraper {
      width: 100%;
      margin: 0; } }
  .vacancies-terms__item {
    background: #FFFFFF;
    border: 1px solid #CBCDC9;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.3);
    box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.3);
    margin-bottom: 20px;
    cursor: pointer; }
    .vacancies-terms__item-head {
      padding: 22px 0 22px 20px; }
      .vacancies-terms__item-head:after {
        display: inline-block;
        content: "";
        width: 12px;
        height: 6px;
        position: absolute;
        right: 30px;
        margin-top: 5px;
        background: url(../img/i-nav-arrow.svg) center no-repeat;
        vertical-align: middle;
        background-size: cover;
        -webkit-transition: all .2s;
        -o-transition: all .2s;
        transition: all .2s; }
        @media (max-width: 767px) {
          .vacancies-terms__item-head:after {
            right: 15px;
            margin-top: 10px; } }
      .vacancies-terms__item-head-text {
        font-size: 18px;
        letter-spacing: 0.05em;
        color: #23171A;
        font-weight: bold;
        display: inline-block; }
        @media (max-width: 1023px) {
          .vacancies-terms__item-head-text {
            width: 90%; } }
    .vacancies-terms__item-content {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex; }
    .vacancies-terms__item-container {
      display: none; }
      .vacancies-terms__item-container ul {
        padding-left: 20px; }
      .vacancies-terms__item-container-text {
        width: calc(100% / 12 * 8);
        padding: 0 0 22px 20px; }
        @media (max-width: 1023px) {
          .vacancies-terms__item-container-text {
            width: calc(100% / 12 * 10); } }
        @media (max-width: 767px) {
          .vacancies-terms__item-container-text {
            width: calc(100% / 12 * 12); } }
      .vacancies-terms__item-container-img {
        width: calc(100% / 12 * 4);
        background-repeat: no-repeat;
        background-position: right bottom;
        background-size: contain; }
        @media (max-width: 1023px) {
          .vacancies-terms__item-container-img {
            display: none; } }

.vacancies-consult {
  padding-top: 70px;
  padding-bottom: 70px;
  background-color: #eeeff1; }
  @media (max-width: 1023px) {
    .vacancies-consult {
      display: none; } }
  .vacancies-consult .section-subtitle {
    margin-bottom: 30px; }

.vacancies-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px; }
  @media screen and (max-width: 992px) {
    .vacancies-form {
      padding-left: 15px;
      padding-right: 15px; } }
  .vacancies-form .btn {
    margin-top: 30px;
    margin-left: auto;
    margin-right: auto; }
  .vacancies-form__part-left {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .vacancies-form__part-left {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
    @media (max-width: 767px) {
      .vacancies-form__part-left {
        width: calc(100% / 12 * 12 - 30px);
        margin-bottom: 30px; } }
    .vacancies-form__part-left .textfield + .textfield {
      margin-top: 30px; }
  .vacancies-form__part-right {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin-right: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .vacancies-form__part-right {
        width: calc(100% / 12 * 6 - 30px);
        margin-right: calc(100% / 12 * 0 + 15px); } }
    @media (max-width: 767px) {
      .vacancies-form__part-right {
        width: calc(100% / 12 * 12 - 30px); } }
  .vacancies-form .textfield {
    width: 100%; }
    .vacancies-form .textfield input, .vacancies-form .textfield textarea {
      background-color: #f7f7f7;
      width: 100%; }

.page-contacts-head {
  background-image: url(../img/bg-available.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.page-contacts-content {
  padding: 200px 0; }
  @media (max-width: 1023px) {
    .page-contacts-content {
      padding: 100px 0; } }

.contacts-card {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  width: 100%; }
  .contacts-card__image {
    width: calc(100% / 12 * 4.2 - 30px);
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    position: relative;
    height: 870px; }
    @media (max-width: 1023px) {
      .contacts-card__image {
        display: none; } }
    .contacts-card__image img {
      width: 100%;
      -o-object-fit: cover;
      object-fit: cover;
      position: absolute;
      top: 0;
      left: 0;
      height: 100%; }
  .contacts-card__ico {
    width: calc(100% / 12 * 2 - 30px);
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    margin-top: 20px; }
  .contacts-card__info {
    width: calc(100% / 12 * 7 - 30px);
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    @media (max-width: 1023px) {
      .contacts-card__info {
        width: calc(100% / 12 * 10 - 30px);
        margin-left: calc(100% / 12 * 1 + 15px); } }
    @media (max-width: 767px) {
      .contacts-card__info {
        width: calc(100% / 12 * 12 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px);
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column; } }
  .contacts-card__title {
    font-weight: bold;
    margin-bottom: 5px;
    letter-spacing: 0.1em; }
  .contacts-card__p {
    margin-top: 5px; }
    .contacts-card__p span {
      display: block; }
  .contacts-card__text {
    margin-bottom: 40px;
    width: calc(100% / 12 * 10 - 30px);
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px; }
    @media (max-width: 767px) {
      .contacts-card__text {
        margin-bottom: 20px; } }

#map-contacts {
  height: 735px; }
  @media (max-width: 1023px) {
    #map-contacts {
      height: 385px; } }
  @media (max-width: 767px) {
    #map-contacts {
      height: 150px; } }

.contacts-map__text {
  margin-top: 50px;
  width: calc(100% / 12 * 10 - 30px);
  margin-left: calc(100% / 12 * 1 + 15px); }
  @media (max-width: 1023px) {
    .contacts-map__text {
      width: calc(100% / 12 * 12 - 30px);
      margin-left: calc(100% / 12 * 0 + 15px); } }

.contacts-map__p {
  padding-left: 20px;
  margin-top: 20px; }
  .contacts-map__p li {
    padding-bottom: 20px; }

.page-customer-head {
  background-image: url(../img/bg-customer-head.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  color: white;
  padding-bottom: 0;
  -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
  box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }

.page-customer {
  padding-bottom: 0px; }

.customer-card {
  padding-top: 200px;
  padding-bottom: 400px; }
  @media (max-width: 1023px) {
    .customer-card {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      padding-bottom: 0;
      padding-top: 100px;
      padding-bottom: 200px; } }
  @media (max-width: 767px) {
    .customer-card {
      padding-bottom: 120px; } }
  .customer-card__image {
    -webkit-transform: translateX(84%) translateY(-15%);
    -ms-transform: translateX(84%) translateY(-15%);
    transform: translateX(84%) translateY(-15%); }
    @media (max-width: 1023px) {
      .customer-card__image {
        max-width: 100%;
        width: calc(100% / 12 * 12 - 30px);
        height: 530px;
        position: relative;
        -webkit-transform: none;
        -ms-transform: none;
        transform: none; } }
    @media (max-width: 767px) {
      .customer-card__image {
        width: calc(100% / 12 * 12 - 30px);
        height: 215px;
        position: relative; } }
  @media (max-width: 1023px) {
    .customer-card__description {
      padding: 75px 20px;
      float: none;
      -webkit-transform: translateY(-11%);
      -ms-transform: translateY(-11%);
      transform: translateY(-11%);
      width: 100%; } }
  @media (max-width: 767px) {
    .customer-card__description {
      padding: 105px 10px 50px;
      position: relative;
      margin: 0; } }

.page-error {
  padding-bottom: 180px; }
  @media (max-width: 1023px) {
    .page-error {
      padding-bottom: 70px; } }
  @media (max-width: 767px) {
    .page-error {
      padding-bottom: 200px; } }
  .page-error__inner {
    padding-top: 220px;
    text-align: center; }
    @media (max-width: 1023px) {
      .page-error__inner {
        padding-top: 100px; } }
    @media (max-width: 767px) {
      .page-error__inner {
        padding-top: 75px; } }
  .page-error__text {
    margin-top: 80px;
    margin-bottom: 40px; }
    @media (max-width: 1023px) {
      .page-error__text {
        margin-top: 45px; } }

.error-sign {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-bottom: 70px; }
  @media screen and (max-width: 992px) {
    .error-sign {
      padding-left: 15px;
      padding-right: 15px; } }
  @media (max-width: 1023px) {
    .error-sign {
      margin-bottom: 45px; } }
  .error-sign__item {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center; }
    @media (max-width: 767px) {
      .error-sign__item {
        width: calc(100% / 12 * 4 - 30px); } }
    .error-sign__item--wide {
      width: calc(100% / 12 * 4 - 30px); }
  .error-sign__img {
    width: 100%; }

.error-fade {
  opacity: 0;
  -webkit-animation: fIn 1s 5s forwards;
  animation: fIn 1s 5s forwards; }

.error-icon svg {
  width: 100%; }

.error-icon #path0_fill {
  fill: transparent;
  stroke: #c03;
  stroke-dasharray: 1500;
  stroke-dashoffset: 1500;
  -webkit-transition: all 1.5s;
  -o-transition: all 1.5s;
  transition: all 1.5s;
  -webkit-animation: strokeAnimate 3s 2s forwards;
  animation: strokeAnimate 3s 2s forwards; }

.error-icon #path1_stroke_2x {
  fill: transparent; }

@media (max-width: 1023px) {
  .stuff-page .pagenav {
    display: none; } }

.tab-wrapper {
  padding-bottom: 200px;
  overflow: hidden; }
  @media (max-width: 1023px) {
    .tab-wrapper {
      overflow: auto;
      padding-bottom: 160px; } }
  @media (max-width: 1023px) {
    .tab-wrapper--stuff {
      display: none; } }

.tab-item {
  display: none; }
  .tab-item--active {
    display: block; }
  .tab-item .manager-list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    max-width: 1320px;
    margin: 0 auto;
    padding-left: 0px;
    padding-right: 0px;
    padding-top: 100px;
    padding-bottom: 50px;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start; }
    @media screen and (max-width: 992px) {
      .tab-item .manager-list {
        padding-left: 15px;
        padding-right: 15px; } }
  .tab-item .manager-card {
    margin-bottom: 50px; }

.manager-grid {
  font-size: 18px;
  line-height: 21px;
  letter-spacing: .05em; }
  @media (max-width: 1023px) {
    .manager-grid {
      overflow: auto; } }
  .manager-grid__header {
    position: relative;
    -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
    box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }
    @media (max-width: 1023px) {
      .manager-grid__header {
        width: 900px; } }
  .manager-grid__header .manager-grid__row {
    font-weight: bold;
    padding-top: 21px;
    padding-bottom: 23px;
    font-style: normal; }
    .manager-grid__header .manager-grid__row:after {
      display: none; }
  .manager-grid__row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;
    max-width: 1320px;
    margin: 0 auto;
    padding-left: 0px;
    padding-right: 0px;
    position: relative;
    padding-top: 20px;
    padding-bottom: 19px;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    font-style: italic; }
    @media screen and (max-width: 992px) {
      .manager-grid__row {
        padding-left: 15px;
        padding-right: 15px; } }
    @media (max-width: 1023px) {
      .manager-grid__row {
        width: 900px;
        padding-left: 0;
        padding-right: 0; } }
    .manager-grid__row:after {
      content: "";
      display: block;
      position: absolute;
      width: 200%;
      height: 1px;
      background-color: rgba(203, 205, 201, 0.4);
      top: 100%;
      left: -50%; }
      @media (max-width: 1023px) {
        .manager-grid__row:after {
          width: 100%;
          left: 0; } }
  .manager-grid__cell {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 3 - 30px);
    text-align: center; }
    @media (max-width: 1023px) {
      .manager-grid__cell {
        width: calc(100% / 12 * 4 - 30px); } }
    .manager-grid__cell:nth-of-type(1) {
      margin-left: calc(100% / 12 * 1 + 15px);
      width: calc(100% / 12 * 4 - 30px);
      text-align: left;
      font-style: normal; }
      @media (max-width: 1023px) {
        .manager-grid__cell:nth-of-type(1) {
          margin-left: calc(100% / 12 * 0 + 15px);
          width: calc(100% / 12 * 4 - 30px); } }
  .manager-grid__phone {
    color: inherit;
    text-decoration: none; }
    .manager-grid__phone:hover {
      text-decoration: underline; }

.stuff-consult {
  padding-top: 70px;
  padding-bottom: 70px;
  background-color: #eeeff1; }
  .stuff-consult .section-subtitle {
    margin-bottom: 30px; }

.stuff-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  max-width: 1320px;
  margin: 0 auto;
  padding-left: 0px;
  padding-right: 0px; }
  @media screen and (max-width: 992px) {
    .stuff-form {
      padding-left: 15px;
      padding-right: 15px; } }
  .stuff-form .btn {
    margin-top: 30px;
    margin-left: auto;
    margin-right: auto; }
  .stuff-form__part-left {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin-left: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .stuff-form__part-left {
        width: calc(100% / 12 * 6 - 30px);
        margin-left: calc(100% / 12 * 0 + 15px); } }
    @media (max-width: 767px) {
      .stuff-form__part-left {
        width: calc(100% / 12 * 12 - 30px);
        margin-bottom: 30px; } }
    .stuff-form__part-left .textfield + .textfield {
      margin-top: 30px; }
  .stuff-form__part-right {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: 15px;
    margin-right: 15px;
    width: calc(100% / 12 * 4 - 30px);
    margin-right: calc(100% / 12 * 2 + 15px); }
    @media (max-width: 1023px) {
      .stuff-form__part-right {
        width: calc(100% / 12 * 6 - 30px);
        margin-right: calc(100% / 12 * 0 + 15px); } }
    @media (max-width: 767px) {
      .stuff-form__part-right {
        width: calc(100% / 12 * 12 - 30px); } }
  .stuff-form .textfield {
    width: 100%; }
    .stuff-form .textfield input, .stuff-form .textfield textarea {
      background-color: #f7f7f7;
      width: 100%; }

.feedback {
  position: fixed;
  bottom: 40px;
  right: 60px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
  z-index: 50; }
  @media (max-width: 1023px) {
    .feedback {
      bottom: 25px;
      right: 25px; } }
  .feedback__item {
    background-color: #fff;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    margin-bottom: 10px;
    border-radius: 300px;
    border: 5px solid #23171A;
    height: 100px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-shadow: 4px 4px 24px rgba(44, 1, 12, 0.3);
    box-shadow: 4px 4px 24px rgba(44, 1, 12, 0.3);
    cursor: pointer;
    -webkit-tap-highlight-color: transparent; }
    @media (max-width: 1023px) {
      .feedback__item {
        height: 48px;
        width: 48px;
        display: none;
        border-width: 2px; } }
    .feedback__item:last-of-type {
      margin-bottom: 0px; }
      @media (max-width: 1023px) {
        .feedback__item:last-of-type {
          display: block; } }
    .feedback__item:hover .feedback__inner {
      max-width: 300px;
      margin-left: 10px;
      margin-right: 15px; }
    .feedback__item--small {
      margin-right: 20px;
      height: 60px;
      border: 2px solid #23171A; }
      .feedback__item--small .feedback__icon {
        width: 56px;
        height: 56px; }
  .feedback__inner {
    overflow: hidden;
    max-width: 0px;
    -webkit-transition: all .5s linear;
    -o-transition: all .5s linear;
    transition: all .5s linear;
    -webkit-transition-delay: .3s;
    -o-transition-delay: .3s;
    transition-delay: .3s;
    white-space: nowrap;
    margin: 0;
    font-size: 18px; }
    @media (max-width: 1023px) {
      .feedback__inner {
        display: none; } }
  .feedback__icon {
    width: 90px;
    height: 90px;
    background-repeat: no-repeat;
    background-position: center; }
    .feedback__icon--testdrive {
      background-image: url("../img/i-popup-calendar.svg"); }
    .feedback__icon--service {
      background-image: url("../img/i-popup-tools.svg"); }
    .feedback__icon--to {
      background-image: url("../img/i-popup-service.svg"); }
    .feedback__icon--call {
      background-image: url("../img/i-popup-phone.svg"); }
      @media (max-width: 1023px) {
        .feedback__icon--call {
          background-size: 23px 26px;
          background-position: 40% 40%;
          width: 48px;
          height: 48px; } }

.popup {
  display: none;
  position: fixed;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  max-height: 100vh;
  color: #23171A;
  overflow: auto;
  z-index: 200; }
  .popup--controls .popup__body {
    border-radius: 0 5px 5px 5px; }
  .popup--controls .popup__main {
    display: none; }
    .popup--controls .popup__main--active {
      display: block; }
  .popup--visible {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
    .popup--visible .popup__body {
      -webkit-animation: reveal .7s forwards;
      animation: reveal .7s forwards; }
  .popup__dim {
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.3);
    z-index: 50; }
  .popup__control {
    position: absolute;
    bottom: 100%;
    left: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .popup__switcher {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    position: relative;
    width: 100px;
    height: 60px;
    background-color: #fff;
    border-radius: 5px 5px 0 0;
    cursor: pointer;
    background-color: #C4C4C4;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }
    .popup__switcher:after {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%; }
    .popup__switcher--active {
      background-color: #fff; }
    .popup__switcher img {
      max-width: 100%; }
  .popup__body {
    position: relative;
    background-color: #fff;
    width: 690px;
    max-width: 90vw;
    padding: 70px 30px 65px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    border-radius: 5px;
    z-index: 200;
    will-change: transform; }
    @media (max-width: 1023px) {
      .popup__body {
        padding: 30px 10px; } }
  .popup__close {
    width: 20px;
    height: 20px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    position: absolute;
    right: -40px;
    top: 0;
    cursor: pointer;
    background-image: url("../img/i-popup-close.svg");
    background-repeat: no-repeat;
    background-position: center;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s;
    will-change: transform; }
    .popup__close:hover {
      -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
      transform: rotate(180deg); }
  .popup__subtitle {
    margin-bottom: 30px; }
  .popup__form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    max-width: 300px;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin: 0 auto;
    text-align: center; }
    .popup__form .textfield {
      margin-bottom: 30px; }
    .popup__form textarea {
      width: 100%; }
    .popup__form .select {
      margin-bottom: 30px; }
  .popup__cancel {
    margin-top: 8px;
    font-size: 14px;
    letter-spacing: .1em;
    color: #23171A;
    font-style: italic;
    font-family: inherit;
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s;
    border: none;
    background-color: transparent;
    cursor: pointer;
    outline: none;
    display: inline-block; }
    .popup__cancel:hover {
      color: #1D71B8; }
  .popup--narrow .popup__body {
    width: 630px;
    padding-left: 130px;
    padding-right: 130px; }
    @media (max-width: 1023px) {
      .popup--narrow .popup__body {
        padding-left: 10px;
        padding-right: 10px; } }
  .popup--sidebar ul {
    padding-left: 20px; }
  .popup--sidebar .section-title {
    font-size: 24px;
    text-align: left; }
  .popup--sidebar .section-subtitle {
    text-align: left; }
  .popup--sidebar .popup__form {
    max-width: 100%;
    margin-top: 30px; }
  .popup--sidebar .popup__body {
    width: 1130px;
    padding: 0; }
  .popup--sidebar .popup__main {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between; }
  .popup--sidebar .popup__left {
    width: 325px;
    padding: 70px 30px; }
  .popup--sidebar .popup__right {
    width: 470px;
    padding: 70px 30px;
    -webkit-box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5);
    box-shadow: 0px 0px 14px rgba(77, 79, 83, 0.5); }
    @media (max-width: 1023px) {
      .popup--sidebar .popup__right {
        display: none; } }

.price-info__item {
  font-size: 14px;
  font-style: italic;
  font-weight: normal;
  letter-spacing: .1em;
  margin-bottom: 25px; }

.price-info__highlight {
  margin-left: 20px;
  font-weight: bold;
  font-size: 18px;
  letter-spacing: normal; }

.price-docs {
  padding-left: 10px;
  position: relative;
  margin-bottom: 70px; }
  .price-docs:after {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 6px;
    background-color: #CC0033;
    border-radius: 100px; }
  .price-docs__item {
    margin-bottom: 22px; }
    .price-docs__item:last-of-type {
      margin-bottom: 0; }
    .price-docs__item a {
      color: inherit; }
    .price-docs__item img {
      margin-left: 10px;
      margin-right: 10px;
      vertical-align: middle; }
    .price-docs__item span {
      margin-left: 15px;
      font-style: italic; }

.loader {
  display: none;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 50;
  background-color: rgba(255, 255, 255, 0.85); }
  .loader__spinner {
    width: 95px;
    height: 95px;
    background: url("../img/i-loader.png") center no-repeat;
    will-change: transform; }

.popup--sending .loader {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.popup--sending .loader__spinner {
  -webkit-animation: spin 3s infinite linear;
  animation: spin 3s infinite linear; }

@-webkit-keyframes reveal {
  0% {
    opacity: 0;
    -webkit-transform: translateY(100px);
    transform: translateY(100px); }
  70% {
    opacity: .9;
    -webkit-transform: translateY(-20px);
    transform: translateY(-20px); }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px); } }

@keyframes reveal {
  0% {
    opacity: 0;
    -webkit-transform: translateY(100px);
    transform: translateY(100px); }
  70% {
    opacity: .9;
    -webkit-transform: translateY(-20px);
    transform: translateY(-20px); }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px); } }

@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg); } }

@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg); } }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> 8459c08f9100ce78bcabde6fd4a93c1151f5c3c2
